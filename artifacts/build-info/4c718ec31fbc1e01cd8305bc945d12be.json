{"id":"4c718ec31fbc1e01cd8305bc945d12be","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/Raffle.sol":{"content":"//giấy phép\r\n\r\n// SPDX-License-Identifier: SEE LICENSE IN LICENSE\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\r\n\r\nerror Raffle__SendMoreToEnterRaffle();\r\nerror Raffle__RaffleNotOpen();\r\nerror Raffle__UpkeepNotNeeded();\r\nerror Raffle__TransferFailed();\r\n\r\n\r\ncontract Raffle is VRFConsumerBaseV2 {\r\n    enum RaffleState {\r\n        Open,\r\n        Calculating\r\n    }\r\n\r\n    RaffleState public s_raffleState;\r\n    uint256 public immutable i_entranceFee;\r\n    uint256 public immutable i_interval;\r\n    address payable[] public s_players;\r\n    uint256 public s_lastTimeStamp;\r\n    VRFCoordinatorV2Interface public immutable i_vrfCoordinator;\r\n    bytes32 public immutable i_gasLane; //keyhash\r\n    uint64 public immutable i_subscriptionId;\r\n    uint32 public immutable i_callbackGasLimit;\r\n    address public s_recentWinner;\r\n\r\n    uint16 public constant REQUEST_CONFIRMATIONS = 3;\r\n    uint32 public constant NUM_WORDS = 1;\r\n\r\n    event RaffleEnter (address indexed player);\r\n    event RequestedRaffleWinner (uint256 indexed requestId);\r\n    event WinnerPicked (address indexed winner);\r\n\r\n    constructor(\r\n        uint256 entranceFee,\r\n        uint256 interval,\r\n        address vrfCoordinatorV2,\r\n        bytes32 gasLane, //keyhash\r\n        uint64 subscriptionId,\r\n        uint32 callbackGasLimit\r\n\r\n    ) VRFConsumerBaseV2(vrfCoordinatorV2){\r\n        i_entranceFee = entranceFee;\r\n        i_interval = interval;\r\n        s_lastTimeStamp = block.timestamp;\r\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\r\n        i_gasLane = gasLane; //keyhash\r\n        i_subscriptionId = subscriptionId;\r\n        i_callbackGasLimit = callbackGasLimit;\r\n        }\r\n\r\n    function enterRaffel()  external payable {\r\n        // require(msg.value >= i_entranceFee, \"Not enough money sent!\");\r\n        if (msg.value < i_entranceFee) {\r\n                revert Raffle__SendMoreToEnterRaffle();\r\n        }\r\n        // Open, caculating a winner\r\n        if(s_raffleState != RaffleState.Open) {\r\n            revert Raffle__RaffleNotOpen();\r\n        }\r\n        // bạn có thể vào!\r\n        s_players.push(payable(msg.sender));\r\n        emit RaffleEnter(msg.sender);\r\n    }\r\n\r\n\r\n    //1.we want this done automatically\r\n    //2. we want a read random winner\r\n\r\n    //1. Be true after soem time interval\r\n    //2. The lottery to be open\r\n    //3. The contract has ETH\r\n    // Keeper has L\r\n    function checkUpkeep(\r\n        bytes memory /*checkData*/\r\n    ) public view returns (bool upkeepNeeded, bytes memory /*performData*/) {\r\n        bool isOpen = RaffleState.Open == s_raffleState;\r\n        bool hasBalance = address(this).balance > 0;\r\n        bool hasPlayers = s_players.length > 0;\r\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\r\n        upkeepNeeded = (timePassed && isOpen && hasBalance && hasPlayers);\r\n        return (upkeepNeeded, \"0x0\");\r\n    }\r\n\r\n    function performUpkeep(\r\n        bytes calldata /*performData*/) \r\n        external {\r\n        (bool upkeepNeeded, ) = checkUpkeep(\"\");\r\n        if (!upkeepNeeded) {\r\n            revert Raffle__UpkeepNotNeeded();\r\n        }\r\n        // thực hiện việc rút thăm\r\n        s_raffleState = RaffleState.Calculating;\r\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\r\n            i_gasLane, //keyhash\r\n            i_subscriptionId,\r\n            REQUEST_CONFIRMATIONS,\r\n            i_callbackGasLimit,\r\n            NUM_WORDS\r\n        );\r\n        emit RequestedRaffleWinner(requestId);\r\n    }\r\n\r\n    function fulfillRandomWords(\r\n        uint256 /*requestId*/,\r\n        uint256[] memory randomWords\r\n    ) internal override {\r\n        // chọn người chiến thắng\r\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\r\n        address payable recentWinner = s_players[indexOfWinner];\r\n        s_recentWinner = recentWinner;\r\n        s_players = new address payable[](0);\r\n        s_lastTimeStamp = block.timestamp;\r\n        s_raffleState = RaffleState.Open;\r\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\r\n        if (!success) {\r\n            revert Raffle__TransferFailed();\r\n        }\r\n        emit WinnerPicked(recentWinner);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[95]},"id":96,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":95,"linearizedBaseContracts":[95],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"97:267:0","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:0","nodeType":"FunctionDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"392:2:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"418:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"426:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"434:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9,"nodeType":"ArrayTypeName","src":"434:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:0"},"scope":95,"src":"367:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"456:1511:0","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":28,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:0","nodeType":"VariableDeclaration","scope":28,"src":"2003:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"subId","nameLocation":"2031:5:0","nodeType":"VariableDeclaration","scope":28,"src":"2024:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:0","nodeType":"VariableDeclaration","scope":28,"src":"2042:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":18,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:0","nodeType":"VariableDeclaration","scope":28,"src":"2082:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":20,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:0","nodeType":"VariableDeclaration","scope":28,"src":"2111:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":22,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:0","nodeType":"VariableDeclaration","scope":28,"src":"2149:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:0"},"scope":95,"src":"1970:198:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2172:384:0","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2586:2:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"subId","nameLocation":"2614:5:0","nodeType":"VariableDeclaration","scope":34,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:0"},"scope":95,"src":"2559:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"2625:381:0","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":49,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"subId","nameLocation":"3046:5:0","nodeType":"VariableDeclaration","scope":49,"src":"3039:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"balance","nameLocation":"3086:7:0","nodeType":"VariableDeclaration","scope":49,"src":"3079:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":39,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:0","nodeType":"VariableDeclaration","scope":49,"src":"3095:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"owner","nameLocation":"3120:5:0","nodeType":"VariableDeclaration","scope":49,"src":"3112:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:0","nodeType":"VariableDeclaration","scope":49,"src":"3127:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":46,"nodeType":"ArrayTypeName","src":"3127:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:0"},"scope":95,"src":"3009:146:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"3159:164:0","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:0","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"subId","nameLocation":"3375:5:0","nodeType":"VariableDeclaration","scope":57,"src":"3368:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":51,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:0","nodeType":"VariableDeclaration","scope":57,"src":"3382:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"3408:0:0"},"scope":95,"src":"3326:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"3413:212:0","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"subId","nameLocation":"3676:5:0","nodeType":"VariableDeclaration","scope":63,"src":"3669:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":59,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"3691:0:0"},"scope":95,"src":"3628:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"3696:170:0","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"subId","nameLocation":"3897:5:0","nodeType":"VariableDeclaration","scope":71,"src":"3890:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":65,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"3930:0:0"},"scope":95,"src":"3869:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3935:172:0","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"subId","nameLocation":"4141:5:0","nodeType":"VariableDeclaration","scope":79,"src":"4134:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":73,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:0","nodeType":"VariableDeclaration","scope":79,"src":"4148:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"4174:0:0"},"scope":95,"src":"4110:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"4179:140:0","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":87,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"subId","nameLocation":"4357:5:0","nodeType":"VariableDeclaration","scope":87,"src":"4350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":81,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"to","nameLocation":"4372:2:0","nodeType":"VariableDeclaration","scope":87,"src":"4364:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"4384:0:0"},"scope":95,"src":"4322:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"subId","nameLocation":"4718:5:0","nodeType":"VariableDeclaration","scope":94,"src":"4711:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":88,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"4748:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:0"},"scope":95,"src":"4681:73:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":96,"src":"57:4699:0","usedErrors":[]}],"src":"32:4725:0"},"id":0},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":97,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":98,"nodeType":"StructuredDocumentation","src":"57:5275:1","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:1","nodeType":"ContractDefinition","nodes":[{"id":104,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:1","nodeType":"ErrorDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"have","nameLocation":"5413:4:1","nodeType":"VariableDeclaration","scope":104,"src":"5405:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"want","nameLocation":"5427:4:1","nodeType":"VariableDeclaration","scope":104,"src":"5419:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:1"},"src":"5373:60:1"},{"constant":false,"id":106,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:1","nodeType":"VariableDeclaration","scope":153,"src":"5436:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":116,"nodeType":"Block","src":"5593:43:1","statements":[{"expression":{"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":112,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"5599:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":113,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"5616:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":115,"nodeType":"ExpressionStatement","src":"5599:32:1"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5481:72:1","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":117,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:1","nodeType":"VariableDeclaration","scope":117,"src":"5568:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:1"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"5593:0:1"},"scope":153,"src":"5556:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"5640:686:1","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":126,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:1","nodeType":"VariableDeclaration","scope":126,"src":"6357:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:1","nodeType":"VariableDeclaration","scope":126,"src":"6376:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":122,"nodeType":"ArrayTypeName","src":"6376:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"6422:0:1"},"scope":153,"src":"6329:94:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"6707:167:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":136,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6731:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"IfStatement","src":"6713:109:1","trueBody":{"id":144,"nodeType":"Block","src":"6747:75:1","statements":[{"errorCall":{"arguments":[{"expression":{"id":139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":141,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6800:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":138,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"6762:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"RevertStatement","src":"6755:60:1"}]}},{"expression":{"arguments":[{"id":147,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6846:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":148,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"6857:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":146,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6827:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"6827:42:1"}]},"functionSelector":"1fe543e3","id":152,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:1","nodeType":"VariableDeclaration","scope":152,"src":"6649:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:1","nodeType":"VariableDeclaration","scope":152,"src":"6668:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":130,"nodeType":"ArrayTypeName","src":"6668:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"6707:0:1"},"scope":153,"src":"6618:256:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":154,"src":"5333:1543:1","usedErrors":[104]}],"src":"32:6845:1"},"id":1},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"Raffle":[469],"Raffle__RaffleNotOpen":[161],"Raffle__SendMoreToEnterRaffle":[159],"Raffle__TransferFailed":[165],"Raffle__UpkeepNotNeeded":[163],"VRFConsumerBaseV2":[153],"VRFCoordinatorV2Interface":[95]},"id":470,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"70:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":470,"sourceUnit":96,"src":"97:80:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":470,"sourceUnit":154,"src":"179:65:2","symbolAliases":[],"unitAlias":""},{"id":159,"name":"Raffle__SendMoreToEnterRaffle","nameLocation":"254:29:2","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"283:2:2"},"src":"248:38:2"},{"id":161,"name":"Raffle__RaffleNotOpen","nameLocation":"294:21:2","nodeType":"ErrorDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"315:2:2"},"src":"288:30:2"},{"id":163,"name":"Raffle__UpkeepNotNeeded","nameLocation":"326:23:2","nodeType":"ErrorDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"349:2:2"},"src":"320:32:2"},{"id":165,"name":"Raffle__TransferFailed","nameLocation":"360:22:2","nodeType":"ErrorDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"382:2:2"},"src":"354:31:2"},{"abstract":false,"baseContracts":[{"baseName":{"id":166,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"410:17:2"},"id":167,"nodeType":"InheritanceSpecifier","src":"410:17:2"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":469,"linearizedBaseContracts":[469,153],"name":"Raffle","nameLocation":"400:6:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":170,"members":[{"id":168,"name":"Open","nameLocation":"463:4:2","nodeType":"EnumValue","src":"463:4:2"},{"id":169,"name":"Calculating","nameLocation":"478:11:2","nodeType":"EnumValue","src":"478:11:2"}],"name":"RaffleState","nameLocation":"440:11:2","nodeType":"EnumDefinition","src":"435:61:2"},{"constant":false,"functionSelector":"cc45483f","id":173,"mutability":"mutable","name":"s_raffleState","nameLocation":"523:13:2","nodeType":"VariableDeclaration","scope":469,"src":"504:32:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"},"typeName":{"id":172,"nodeType":"UserDefinedTypeName","pathNode":{"id":171,"name":"RaffleState","nodeType":"IdentifierPath","referencedDeclaration":170,"src":"504:11:2"},"referencedDeclaration":170,"src":"504:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"visibility":"public"},{"constant":false,"functionSelector":"7ea3e6c1","id":175,"mutability":"immutable","name":"i_entranceFee","nameLocation":"568:13:2","nodeType":"VariableDeclaration","scope":469,"src":"543:38:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6919207d","id":177,"mutability":"immutable","name":"i_interval","nameLocation":"613:10:2","nodeType":"VariableDeclaration","scope":469,"src":"588:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ae771f6b","id":180,"mutability":"mutable","name":"s_players","nameLocation":"655:9:2","nodeType":"VariableDeclaration","scope":469,"src":"630:34:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"630:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":179,"nodeType":"ArrayTypeName","src":"630:17:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"public"},{"constant":false,"functionSelector":"34854043","id":182,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"686:15:2","nodeType":"VariableDeclaration","scope":469,"src":"671:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aebc4550","id":185,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"751:16:2","nodeType":"VariableDeclaration","scope":469,"src":"708:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":95,"src":"708:25:2"},"referencedDeclaration":95,"src":"708:25:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"8e879c8a","id":187,"mutability":"immutable","name":"i_gasLane","nameLocation":"799:9:2","nodeType":"VariableDeclaration","scope":469,"src":"774:34:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"470cdf97","id":189,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"849:16:2","nodeType":"VariableDeclaration","scope":469,"src":"825:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":188,"name":"uint64","nodeType":"ElementaryTypeName","src":"825:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"functionSelector":"d757d027","id":191,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"896:18:2","nodeType":"VariableDeclaration","scope":469,"src":"872:42:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":190,"name":"uint32","nodeType":"ElementaryTypeName","src":"872:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"8638b0c6","id":193,"mutability":"mutable","name":"s_recentWinner","nameLocation":"936:14:2","nodeType":"VariableDeclaration","scope":469,"src":"921:29:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"67f082b0","id":196,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"982:21:2","nodeType":"VariableDeclaration","scope":469,"src":"959:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":194,"name":"uint16","nodeType":"ElementaryTypeName","src":"959:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1006:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":true,"functionSelector":"72cf6e34","id":199,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1037:9:2","nodeType":"VariableDeclaration","scope":469,"src":"1014:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":197,"name":"uint32","nodeType":"ElementaryTypeName","src":"1014:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1049:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"anonymous":false,"id":203,"name":"RaffleEnter","nameLocation":"1065:11:2","nodeType":"EventDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1094:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1078:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1077:24:2"},"src":"1059:43:2"},{"anonymous":false,"id":207,"name":"RequestedRaffleWinner","nameLocation":"1114:21:2","nodeType":"EventDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1153:9:2","nodeType":"VariableDeclaration","scope":207,"src":"1137:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1136:27:2"},"src":"1108:56:2"},{"anonymous":false,"id":211,"name":"WinnerPicked","nameLocation":"1176:12:2","nodeType":"EventDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1206:6:2","nodeType":"VariableDeclaration","scope":211,"src":"1190:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1189:24:2"},"src":"1170:44:2"},{"body":{"id":260,"nodeType":"Block","src":"1472:331:2","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1483:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1499:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1483:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"1483:27:2"},{"expression":{"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":233,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1521:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":234,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1534:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1521:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":236,"nodeType":"ExpressionStatement","src":"1521:21:2"},{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":237,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1553:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":238,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1571:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1571:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1553:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":241,"nodeType":"ExpressionStatement","src":"1553:33:2"},{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":242,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"1597:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":244,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"1642:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":243,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1616:25:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$95_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1616:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1597:62:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"id":247,"nodeType":"ExpressionStatement","src":"1597:62:2"},{"expression":{"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":248,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1670:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":249,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1682:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1670:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":251,"nodeType":"ExpressionStatement","src":"1670:19:2"},{"expression":{"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":252,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1710:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":253,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1729:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1710:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":255,"nodeType":"ExpressionStatement","src":"1710:33:2"},{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1754:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1775:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1754:37:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":259,"nodeType":"ExpressionStatement","src":"1754:37:2"}]},"id":261,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":226,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"1455:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":227,"kind":"baseConstructorSpecifier","modifierName":{"id":225,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1437:17:2"},"nodeType":"ModifierInvocation","src":"1437:35:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"entranceFee","nameLocation":"1252:11:2","nodeType":"VariableDeclaration","scope":261,"src":"1244:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"interval","nameLocation":"1282:8:2","nodeType":"VariableDeclaration","scope":261,"src":"1274:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1309:16:2","nodeType":"VariableDeclaration","scope":261,"src":"1301:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"1301:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"gasLane","nameLocation":"1344:7:2","nodeType":"VariableDeclaration","scope":261,"src":"1336:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1336:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"subscriptionId","nameLocation":"1379:14:2","nodeType":"VariableDeclaration","scope":261,"src":"1372:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":220,"name":"uint64","nodeType":"ElementaryTypeName","src":"1372:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1411:16:2","nodeType":"VariableDeclaration","scope":261,"src":"1404:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":222,"name":"uint32","nodeType":"ElementaryTypeName","src":"1404:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1233:203:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"1472:0:2"},"scope":469,"src":"1222:581:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":297,"nodeType":"Block","src":"1852:455:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":264,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1942:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1942:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":266,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1954:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1942:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"IfStatement","src":"1938:100:2","trueBody":{"id":271,"nodeType":"Block","src":"1969:69:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":268,"name":"Raffle__SendMoreToEnterRaffle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1995:29:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1995:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"RevertStatement","src":"1988:38:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":273,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2089:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":274,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2106:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$170_$","typeString":"type(enum Raffle.RaffleState)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":168,"src":"2106:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"src":"2089:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"2086:95:2","trueBody":{"id":280,"nodeType":"Block","src":"2124:57:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":277,"name":"Raffle__RaffleNotOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2146:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2146:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"RevertStatement","src":"2139:30:2"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":287,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2248:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2248:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2240:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"2240:8:2","stateMutability":"payable","typeDescriptions":{}}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2240:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":282,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2225:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2225:14:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2225:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":291,"nodeType":"ExpressionStatement","src":"2225:35:2"},{"eventCall":{"arguments":[{"expression":{"id":293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2288:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2288:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":292,"name":"RaffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2276:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2276:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"EmitStatement","src":"2271:28:2"}]},"functionSelector":"0ff19fd7","id":298,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffel","nameLocation":"1820:11:2","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"1831:2:2"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"1852:0:2"},"scope":469,"src":"1811:496:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":357,"nodeType":"Block","src":"2662:363:2","statements":[{"assignments":[308],"declarations":[{"constant":false,"id":308,"mutability":"mutable","name":"isOpen","nameLocation":"2678:6:2","nodeType":"VariableDeclaration","scope":357,"src":"2673:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":307,"name":"bool","nodeType":"ElementaryTypeName","src":"2673:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":313,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":309,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2687:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$170_$","typeString":"type(enum Raffle.RaffleState)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":168,"src":"2687:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":311,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2707:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"src":"2687:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2673:47:2"},{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"hasBalance","nameLocation":"2736:10:2","nodeType":"VariableDeclaration","scope":357,"src":"2731:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"2731:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":323,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":318,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2757:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$469","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$469","typeString":"contract Raffle"}],"id":317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2749:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"2749:7:2","typeDescriptions":{}}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2749:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2749:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2773:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2749:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2731:43:2"},{"assignments":[325],"declarations":[{"constant":false,"id":325,"mutability":"mutable","name":"hasPlayers","nameLocation":"2790:10:2","nodeType":"VariableDeclaration","scope":357,"src":"2785:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"2785:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":330,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":326,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2803:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2803:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2822:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2803:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2785:38:2"},{"assignments":[332],"declarations":[{"constant":false,"id":332,"mutability":"mutable","name":"timePassed","nameLocation":"2839:10:2","nodeType":"VariableDeclaration","scope":357,"src":"2834:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":331,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":341,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":333,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2854:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2854:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":335,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2872:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2853:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":338,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2891:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2852:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2834:68:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":342,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2913:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2929:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":344,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2943:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2929:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":346,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2953:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2929:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":348,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"2967:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2929:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2928:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2913:65:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":352,"nodeType":"ExpressionStatement","src":"2913:65:2"},{"expression":{"components":[{"id":353,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2997:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"307830","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3011:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""},"value":"0x0"}],"id":355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2996:21:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_$","typeString":"tuple(bool,literal_string \"0x0\")"}},"functionReturnParameters":306,"id":356,"nodeType":"Return","src":"2989:28:2"}]},"functionSelector":"6e04ff0d","id":358,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"2536:11:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"2558:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2558:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2547:44:2"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2618:12:2","nodeType":"VariableDeclaration","scope":358,"src":"2613:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"2613:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"2632:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":304,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2612:49:2"},"scope":469,"src":"2527:498:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":396,"nodeType":"Block","src":"3117:523:2","statements":[{"assignments":[364,null],"declarations":[{"constant":false,"id":364,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"3134:12:2","nodeType":"VariableDeclaration","scope":396,"src":"3129:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"3129:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":368,"initialValue":{"arguments":[{"hexValue":"","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3164:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":365,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"3152:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3152:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3128:39:2"},{"condition":{"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3182:13:2","subExpression":{"id":369,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3183:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":375,"nodeType":"IfStatement","src":"3178:78:2","trueBody":{"id":374,"nodeType":"Block","src":"3197:59:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":371,"name":"Raffle__UpkeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"3219:23:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3219:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"RevertStatement","src":"3212:32:2"}]}},{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":376,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"3310:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":377,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"3326:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$170_$","typeString":"type(enum Raffle.RaffleState)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Calculating","nodeType":"MemberAccess","referencedDeclaration":169,"src":"3326:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"src":"3310:39:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"id":380,"nodeType":"ExpressionStatement","src":"3310:39:2"},{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"requestId","nameLocation":"3368:9:2","nodeType":"VariableDeclaration","scope":396,"src":"3360:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"3360:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":391,"initialValue":{"arguments":[{"id":385,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"3430:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":386,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3464:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":387,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3495:21:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":388,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"3531:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":389,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3564:9:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":383,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3380:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":28,"src":"3380:35:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3380:204:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3360:224:2"},{"eventCall":{"arguments":[{"id":393,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"3622:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":392,"name":"RequestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3600:21:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3600:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"EmitStatement","src":"3595:37:2"}]},"functionSelector":"4585e33b","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"3042:13:2","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"3066:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"3066:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3055:42:2"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"3117:0:2"},"scope":469,"src":"3033:607:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[126],"body":{"id":467,"nodeType":"Block","src":"3772:565:2","statements":[{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"indexOfWinner","nameLocation":"3835:13:2","nodeType":"VariableDeclaration","scope":467,"src":"3827:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3827:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":408,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3851:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":410,"indexExpression":{"hexValue":"30","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3863:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3851:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":411,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3868:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3868:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3851:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3827:57:2"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"recentWinner","nameLocation":"3911:12:2","nodeType":"VariableDeclaration","scope":467,"src":"3895:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"3895:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":420,"initialValue":{"baseExpression":{"id":417,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3926:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":419,"indexExpression":{"id":418,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3936:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3926:24:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"3895:55:2"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3961:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3978:12:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3961:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"nodeType":"ExpressionStatement","src":"3961:29:2"},{"expression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":425,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4001:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4035:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4013:21:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"4017:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":427,"nodeType":"ArrayTypeName","src":"4017:17:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4013:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"4001:36:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":432,"nodeType":"ExpressionStatement","src":"4001:36:2"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":433,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"4048:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":434,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4066:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4066:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4048:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ExpressionStatement","src":"4048:33:2"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":438,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"4092:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":439,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"4108:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$170_$","typeString":"type(enum Raffle.RaffleState)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":168,"src":"4108:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"src":"4092:32:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$170","typeString":"enum Raffle.RaffleState"}},"id":442,"nodeType":"ExpressionStatement","src":"4092:32:2"},{"assignments":[444,null],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"success","nameLocation":"4141:7:2","nodeType":"VariableDeclaration","scope":467,"src":"4136:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":443,"name":"bool","nodeType":"ElementaryTypeName","src":"4136:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":455,"initialValue":{"arguments":[{"hexValue":"","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4202:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":445,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4154:12:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4154:17:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":449,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4187:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$469","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$469","typeString":"contract Raffle"}],"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4179:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:2","typeDescriptions":{}}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4179:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4179:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4154:47:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4154:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4135:70:2"},{"condition":{"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4220:8:2","subExpression":{"id":456,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4221:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"4216:72:2","trueBody":{"id":461,"nodeType":"Block","src":"4230:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"Raffle__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"4252:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4252:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"RevertStatement","src":"4245:31:2"}]}},{"eventCall":{"arguments":[{"id":464,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4316:12:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":463,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4303:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4303:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"4298:31:2"}]},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3657:18:2","nodeType":"FunctionDefinition","overrides":{"id":404,"nodeType":"OverrideSpecifier","overrides":[],"src":"3763:8:2"},"parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"3686:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"randomWords","nameLocation":"3735:11:2","nodeType":"VariableDeclaration","scope":468,"src":"3718:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3718:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":401,"nodeType":"ArrayTypeName","src":"3718:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3675:78:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"3772:0:2"},"scope":469,"src":"3648:689:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":470,"src":"391:3949:2","usedErrors":[104,159,161,163,165]}],"src":"70:4270:2"},"id":2}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"uint256","name":"interval","type":"uint256"},{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"Raffle__RaffleNotOpen","type":"error"},{"inputs":[],"name":"Raffle__SendMoreToEnterRaffle","type":"error"},{"inputs":[],"name":"Raffle__TransferFailed","type":"error"},{"inputs":[],"name":"Raffle__UpkeepNotNeeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffleWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[],"name":"NUM_WORDS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REQUEST_CONFIRMATIONS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterRaffel","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"i_callbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_entranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_gasLane","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_interval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_subscriptionId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_vrfCoordinator","outputs":[{"internalType":"contract VRFCoordinatorV2Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_lastTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_players","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_raffleState","outputs":[{"internalType":"enum Raffle.RaffleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_recentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_117":{"entryPoint":null,"id":117,"parameterSlots":1,"returnSlots":0},"@_261":{"entryPoint":null,"id":261,"parameterSlots":6,"returnSlots":0},"abi_decode_tuple_t_uint256t_uint256t_addresst_bytes32t_uint64t_uint32_fromMemory":{"entryPoint":134,"id":null,"parameterSlots":2,"returnSlots":6}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:830:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"178:650:3","statements":[{"body":{"nodeType":"YulBlock","src":"225:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"237:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"227:6:3"},"nodeType":"YulFunctionCall","src":"227:12:3"},"nodeType":"YulExpressionStatement","src":"227:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"199:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"208:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"195:3:3"},"nodeType":"YulFunctionCall","src":"195:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"220:3:3","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"191:3:3"},"nodeType":"YulFunctionCall","src":"191:33:3"},"nodeType":"YulIf","src":"188:53:3"},{"nodeType":"YulAssignment","src":"250:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"266:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"260:5:3"},"nodeType":"YulFunctionCall","src":"260:16:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"250:6:3"}]},{"nodeType":"YulAssignment","src":"285:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"305:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"316:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"301:3:3"},"nodeType":"YulFunctionCall","src":"301:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"295:5:3"},"nodeType":"YulFunctionCall","src":"295:25:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"285:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"329:38:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"352:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"363:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"348:3:3"},"nodeType":"YulFunctionCall","src":"348:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"342:5:3"},"nodeType":"YulFunctionCall","src":"342:25:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"333:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"430:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"439:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"442:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"432:6:3"},"nodeType":"YulFunctionCall","src":"432:12:3"},"nodeType":"YulExpressionStatement","src":"432:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"389:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"400:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"415:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"420:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"411:3:3"},"nodeType":"YulFunctionCall","src":"411:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"424:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"407:3:3"},"nodeType":"YulFunctionCall","src":"407:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"396:3:3"},"nodeType":"YulFunctionCall","src":"396:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"386:2:3"},"nodeType":"YulFunctionCall","src":"386:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"379:6:3"},"nodeType":"YulFunctionCall","src":"379:50:3"},"nodeType":"YulIf","src":"376:70:3"},{"nodeType":"YulAssignment","src":"455:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"465:5:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"455:6:3"}]},{"nodeType":"YulAssignment","src":"479:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:3"},"nodeType":"YulFunctionCall","src":"495:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"489:5:3"},"nodeType":"YulFunctionCall","src":"489:25:3"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"479:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"523:41:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"559:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"544:3:3"},"nodeType":"YulFunctionCall","src":"544:19:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:3"},"nodeType":"YulFunctionCall","src":"538:26:3"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"527:7:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"630:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"639:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"642:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"632:6:3"},"nodeType":"YulFunctionCall","src":"632:12:3"},"nodeType":"YulExpressionStatement","src":"632:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"586:7:3"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"599:7:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"616:2:3","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"620:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"612:3:3"},"nodeType":"YulFunctionCall","src":"612:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"624:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"608:3:3"},"nodeType":"YulFunctionCall","src":"608:18:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"595:3:3"},"nodeType":"YulFunctionCall","src":"595:32:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"583:2:3"},"nodeType":"YulFunctionCall","src":"583:45:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"576:6:3"},"nodeType":"YulFunctionCall","src":"576:53:3"},"nodeType":"YulIf","src":"573:73:3"},{"nodeType":"YulAssignment","src":"655:17:3","value":{"name":"value_1","nodeType":"YulIdentifier","src":"665:7:3"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"655:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"681:41:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"706:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"717:3:3","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"702:3:3"},"nodeType":"YulFunctionCall","src":"702:19:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"696:5:3"},"nodeType":"YulFunctionCall","src":"696:26:3"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"685:7:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"780:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"789:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"792:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"782:6:3"},"nodeType":"YulFunctionCall","src":"782:12:3"},"nodeType":"YulExpressionStatement","src":"782:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"744:7:3"},{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"757:7:3"},{"kind":"number","nodeType":"YulLiteral","src":"766:10:3","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"753:3:3"},"nodeType":"YulFunctionCall","src":"753:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"741:2:3"},"nodeType":"YulFunctionCall","src":"741:37:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"734:6:3"},"nodeType":"YulFunctionCall","src":"734:45:3"},"nodeType":"YulIf","src":"731:65:3"},{"nodeType":"YulAssignment","src":"805:17:3","value":{"name":"value_2","nodeType":"YulIdentifier","src":"815:7:3"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"805:6:3"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_bytes32t_uint64t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"115:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"127:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"135:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"143:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"151:6:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"159:6:3","type":""},{"name":"value5","nodeType":"YulTypedName","src":"167:6:3","type":""}],"src":"14:814:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_bytes32t_uint64t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n        let value_1 := mload(add(headStart, 128))\n        if iszero(eq(value_1, and(value_1, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value4 := value_1\n        let value_2 := mload(add(headStart, 160))\n        if iszero(eq(value_2, and(value_2, 0xffffffff))) { revert(0, 0) }\n        value5 := value_2\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405234801561001157600080fd5b50604051610e8d380380610e8d83398101604081905261003091610086565b60609390931b6001600160601b031916608081905260a09590955260c09384524260025560e09485526101009190915290911b6001600160c01b03191661012052901b6001600160e01b03191661014052610111565b60008060008060008060c0878903121561009f57600080fd5b86516020880151604089015191975095506001600160a01b03811681146100c557600080fd5b6060880151608089015191955093506001600160401b03811681146100e957600080fd5b60a088015190925063ffffffff8116811461010357600080fd5b809150509295509295509295565b60805160601c60a05160c05160e05160601c610100516101205160c01c6101405160e01c610ce56101a86000396000818161039901526105e101526000818161017d01526105aa0152600081816102ea015261058401526000818161033e015261061d0152600081816101f2015261070101526000818161027e01526103bd0152600081816104aa01526104ec0152610ce56000f3fe6080604052600436106100f35760003560e01c806372cf6e341161008a578063ae771f6b11610059578063ae771f6b1461030c578063aebc45501461032c578063cc45483f14610360578063d757d0271461038757600080fd5b806372cf6e34146102425780637ea3e6c11461026c5780638638b0c6146102a05780638e879c8a146102d857600080fd5b8063470cdf97116100c6578063470cdf971461016b57806367f082b0146101b85780636919207d146101e05780636e04ff0d1461021457600080fd5b80630ff19fd7146100f85780631fe543e31461010257806334854043146101225780634585e33b1461014b575b600080fd5b6101006103bb565b005b34801561010e57600080fd5b5061010061011d366004610ab5565b61049f565b34801561012e57600080fd5b5061013860025481565b6040519081526020015b60405180910390f35b34801561015757600080fd5b5061010061016636600461097c565b61052b565b34801561017757600080fd5b5061019f7f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff9091168152602001610142565b3480156101c457600080fd5b506101cd600381565b60405161ffff9091168152602001610142565b3480156101ec57600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b34801561022057600080fd5b5061023461022f3660046109ee565b6106cd565b604051610142929190610b6e565b34801561024e57600080fd5b50610257600181565b60405163ffffffff9091168152602001610142565b34801561027857600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ac57600080fd5b506003546102c0906001600160a01b031681565b6040516001600160a01b039091168152602001610142565b3480156102e457600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b34801561031857600080fd5b506102c0610327366004610a83565b610772565b34801561033857600080fd5b506102c07f000000000000000000000000000000000000000000000000000000000000000081565b34801561036c57600080fd5b5060005461037a9060ff1681565b6040516101429190610bcd565b34801561039357600080fd5b506102577f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000003410156103fc5760405163181c600560e11b815260040160405180910390fd5b6000805460ff16600181111561041457610414610c6d565b146104325760405163349289c560e21b815260040160405180910390fd5b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319163390811790915560405190917f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d491a2565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051d5760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440160405180910390fd5b610527828261079c565b5050565b6000610545604051806020016040528060008152506106cd565b5090508061056657604051638e4bc81760e01b815260040160405180910390fd5b6000805460ff1916600190811782556040516305d3b1d360e41b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166024820152600360448201527f000000000000000000000000000000000000000000000000000000000000000063ffffffff16606482015260848101919091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635d3b1d309060a401602060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190610a9c565b60405190915081907fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b90600090a250505050565b60008054606090829060ff1660018111156106ea576106ea610c6d565b6001546002549115925047151591901515906000907f00000000000000000000000000000000000000000000000000000000000000009061072b9042610c26565b1190508080156107385750835b80156107415750825b801561074a5750815b60408051808201909152600381526203078360ec1b6020820152909890975095505050505050565b6001818154811061078257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600180549050826000815181106107b7576107b7610c83565b60200260200101516107c99190610c4b565b90506000600182815481106107e0576107e0610c83565b6000918252602082200154600380546001600160a01b0319166001600160a01b0390921691821790559150604051908082528060200260200182016040528015610834578160200160208202803683370190505b50805161084991600191602090910190610902565b50426002556000805460ff191681556040516001600160a01b0383169047908381818185875af1925050503d80600081146108a0576040519150601f19603f3d011682016040523d82523d6000602084013e6108a5565b606091505b50509050806108c75760405163a1d04b3960e01b815260040160405180910390fd5b6040516001600160a01b038316907f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df90600090a25050505050565b828054828255906000526020600020908101928215610957579160200282015b8281111561095757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610922565b50610963929150610967565b5090565b5b808211156109635760008155600101610968565b6000806020838503121561098f57600080fd5b823567ffffffffffffffff808211156109a757600080fd5b818501915085601f8301126109bb57600080fd5b8135818111156109ca57600080fd5b8660208285010111156109dc57600080fd5b60209290920196919550909350505050565b60006020808385031215610a0157600080fd5b823567ffffffffffffffff80821115610a1957600080fd5b818501915085601f830112610a2d57600080fd5b813581811115610a3f57610a3f610c99565b610a51601f8201601f19168501610bf5565b91508082528684828501011115610a6757600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215610a9557600080fd5b5035919050565b600060208284031215610aae57600080fd5b5051919050565b60008060408385031215610ac857600080fd5b8235915060208084013567ffffffffffffffff80821115610ae857600080fd5b818601915086601f830112610afc57600080fd5b813581811115610b0e57610b0e610c99565b8060051b9150610b1f848301610bf5565b8181528481019084860184860187018b1015610b3a57600080fd5b600095505b83861015610b5d578035835260019590950194918601918601610b3f565b508096505050505050509250929050565b821515815260006020604081840152835180604085015260005b81811015610ba457858101830151858201606001528201610b88565b81811115610bb6576000606083870101525b50601f01601f191692909201606001949350505050565b6020810160028310610bef57634e487b7160e01b600052602160045260246000fd5b91905290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1e57610c1e610c99565b604052919050565b600082821015610c4657634e487b7160e01b600052601160045260246000fd5b500390565b600082610c6857634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fe5bdb9921811b380d08fb04df1a5e601c21eb2f63c6d961d5104099548dfe3864736f6c63430008070033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE8D CODESIZE SUB DUP1 PUSH2 0xE8D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x86 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0xE0 SWAP5 DUP6 MSTORE PUSH2 0x100 SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH2 0x120 MSTORE SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x140 MSTORE PUSH2 0x111 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 DUP10 ADD MLOAD SWAP2 SWAP8 POP SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA0 DUP9 ADD MLOAD SWAP1 SWAP3 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH1 0xC0 SHR PUSH2 0x140 MLOAD PUSH1 0xE0 SHR PUSH2 0xCE5 PUSH2 0x1A8 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x399 ADD MSTORE PUSH2 0x5E1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x17D ADD MSTORE PUSH2 0x5AA ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2EA ADD MSTORE PUSH2 0x584 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x33E ADD MSTORE PUSH2 0x61D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F2 ADD MSTORE PUSH2 0x701 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x27E ADD MSTORE PUSH2 0x3BD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4AA ADD MSTORE PUSH2 0x4EC ADD MSTORE PUSH2 0xCE5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72CF6E34 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAE771F6B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAE771F6B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xAEBC4550 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xCC45483F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD757D027 EQ PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72CF6E34 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x7EA3E6C1 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x8638B0C6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x8E879C8A EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x470CDF97 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x470CDF97 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x67F082B0 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x6919207D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFF19FD7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x34854043 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH2 0x3BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP3 SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2C0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x37A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x181C6005 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x414 JUMPI PUSH2 0x414 PUSH2 0xC6D JUMP JUMPDEST EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH4 0x349289C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 SWAP2 LOG2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x527 DUP3 DUP3 PUSH2 0x79C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6CD JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8E4BC817 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6EA PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP2 ISZERO SWAP3 POP SELFBALANCE ISZERO ISZERO SWAP2 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x72B SWAP1 TIMESTAMP PUSH2 0xC26 JUMP JUMPDEST GT SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x738 JUMPI POP DUP4 JUMPDEST DUP1 ISZERO PUSH2 0x741 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x74A JUMPI POP DUP2 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x30783 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7B7 JUMPI PUSH2 0x7B7 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7E0 JUMPI PUSH2 0x7E0 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x834 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x849 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA1D04B39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x957 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x957 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x922 JUMP JUMPDEST POP PUSH2 0x963 SWAP3 SWAP2 POP PUSH2 0x967 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x968 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA3F JUMPI PUSH2 0xA3F PUSH2 0xC99 JUMP JUMPDEST PUSH2 0xA51 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xBF5 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0xC99 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xB1F DUP5 DUP4 ADD PUSH2 0xBF5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP5 DUP7 ADD DUP8 ADD DUP12 LT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xB5D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0xB88 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0xBEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1E PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC68 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID JUMPDEST 0xDB SWAP10 0x21 DUP2 SHL CODESIZE 0xD ADDMOD 0xFB DIV 0xDF BYTE 0x5E PUSH1 0x1C 0x21 0xEB 0x2F PUSH4 0xC6D961D5 LT BLOCKHASH SWAP10 SLOAD DUP14 INVALID CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"391:3949:2:-:0;;;1222:581;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5599:32:1;;;;;-1:-1:-1;;;;;;5599:32:1;;;;;1483:27:2::1;::::0;;;;1521:21:::1;::::0;;;1571:15:::1;1553;:33:::0;1597:62:::1;::::0;;;1670:19:::1;::::0;;;;1710:33;;;-1:-1:-1;;;;;;1710:33:2;::::1;::::0;1754:37;;-1:-1:-1;;;;;;1754:37:2;::::1;::::0;391:3949;;14:814:3;127:6;135;143;151;159;167;220:3;208:9;199:7;195:23;191:33;188:53;;;237:1;234;227:12;188:53;260:16;;316:2;301:18;;295:25;363:2;348:18;;342:25;260:16;;-1:-1:-1;295:25:3;-1:-1:-1;;;;;;396:31:3;;386:42;;376:70;;442:1;439;432:12;376:70;510:2;495:18;;489:25;559:3;544:19;;538:26;465:5;;-1:-1:-1;489:25:3;-1:-1:-1;;;;;;595:32:3;;583:45;;573:73;;642:1;639;632:12;573:73;717:3;702:19;;696:26;665:7;;-1:-1:-1;766:10:3;753:24;;741:37;;731:65;;792:1;789;782:12;731:65;815:7;805:17;;;14:814;;;;;;;;:::o;:::-;391:3949:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@NUM_WORDS_199":{"entryPoint":null,"id":199,"parameterSlots":0,"returnSlots":0},"@REQUEST_CONFIRMATIONS_196":{"entryPoint":null,"id":196,"parameterSlots":0,"returnSlots":0},"@checkUpkeep_358":{"entryPoint":1741,"id":358,"parameterSlots":1,"returnSlots":2},"@enterRaffel_298":{"entryPoint":955,"id":298,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_468":{"entryPoint":1948,"id":468,"parameterSlots":2,"returnSlots":0},"@i_callbackGasLimit_191":{"entryPoint":null,"id":191,"parameterSlots":0,"returnSlots":0},"@i_entranceFee_175":{"entryPoint":null,"id":175,"parameterSlots":0,"returnSlots":0},"@i_gasLane_187":{"entryPoint":null,"id":187,"parameterSlots":0,"returnSlots":0},"@i_interval_177":{"entryPoint":null,"id":177,"parameterSlots":0,"returnSlots":0},"@i_subscriptionId_189":{"entryPoint":null,"id":189,"parameterSlots":0,"returnSlots":0},"@i_vrfCoordinator_185":{"entryPoint":null,"id":185,"parameterSlots":0,"returnSlots":0},"@performUpkeep_397":{"entryPoint":1323,"id":397,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_152":{"entryPoint":1183,"id":152,"parameterSlots":2,"returnSlots":0},"@s_lastTimeStamp_182":{"entryPoint":null,"id":182,"parameterSlots":0,"returnSlots":0},"@s_players_180":{"entryPoint":1906,"id":180,"parameterSlots":0,"returnSlots":0},"@s_raffleState_173":{"entryPoint":null,"id":173,"parameterSlots":0,"returnSlots":0},"@s_recentWinner_193":{"entryPoint":null,"id":193,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":2428,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":2542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2716,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2741,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2926,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$95__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffleState_$170__to_t_uint8__fromStack_reversed":{"entryPoint":3021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3061,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3110,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":3147,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":3181,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3203,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3225,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7620:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"103:502:3","statements":[{"body":{"nodeType":"YulBlock","src":"149:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"158:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"151:6:3"},"nodeType":"YulFunctionCall","src":"151:12:3"},"nodeType":"YulExpressionStatement","src":"151:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"124:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"133:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:3"},"nodeType":"YulFunctionCall","src":"120:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"145:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"116:3:3"},"nodeType":"YulFunctionCall","src":"116:32:3"},"nodeType":"YulIf","src":"113:52:3"},{"nodeType":"YulVariableDeclaration","src":"174:37:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"201:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"188:12:3"},"nodeType":"YulFunctionCall","src":"188:23:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"178:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"220:28:3","value":{"kind":"number","nodeType":"YulLiteral","src":"230:18:3","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"224:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"275:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"284:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"287:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"277:6:3"},"nodeType":"YulFunctionCall","src":"277:12:3"},"nodeType":"YulExpressionStatement","src":"277:12:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"263:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"271:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"260:2:3"},"nodeType":"YulFunctionCall","src":"260:14:3"},"nodeType":"YulIf","src":"257:34:3"},{"nodeType":"YulVariableDeclaration","src":"300:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"314:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"325:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"310:3:3"},"nodeType":"YulFunctionCall","src":"310:22:3"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"304:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"380:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"389:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"392:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"382:6:3"},"nodeType":"YulFunctionCall","src":"382:12:3"},"nodeType":"YulExpressionStatement","src":"382:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"359:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"363:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"355:3:3"},"nodeType":"YulFunctionCall","src":"355:13:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"370:7:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"351:3:3"},"nodeType":"YulFunctionCall","src":"351:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"344:6:3"},"nodeType":"YulFunctionCall","src":"344:35:3"},"nodeType":"YulIf","src":"341:55:3"},{"nodeType":"YulVariableDeclaration","src":"405:30:3","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"432:2:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"419:12:3"},"nodeType":"YulFunctionCall","src":"419:16:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"409:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:3"},"nodeType":"YulFunctionCall","src":"464:12:3"},"nodeType":"YulExpressionStatement","src":"464:12:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"450:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"458:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"447:2:3"},"nodeType":"YulFunctionCall","src":"447:14:3"},"nodeType":"YulIf","src":"444:34:3"},{"body":{"nodeType":"YulBlock","src":"528:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"537:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"540:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"530:6:3"},"nodeType":"YulFunctionCall","src":"530:12:3"},"nodeType":"YulExpressionStatement","src":"530:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"501:2:3"},{"name":"length","nodeType":"YulIdentifier","src":"505:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"497:3:3"},"nodeType":"YulFunctionCall","src":"497:15:3"},{"kind":"number","nodeType":"YulLiteral","src":"514:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:3"},"nodeType":"YulFunctionCall","src":"493:24:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"519:7:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:3"},"nodeType":"YulFunctionCall","src":"490:37:3"},"nodeType":"YulIf","src":"487:57:3"},{"nodeType":"YulAssignment","src":"553:21:3","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"567:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"571:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"563:3:3"},"nodeType":"YulFunctionCall","src":"563:11:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:3"}]},{"nodeType":"YulAssignment","src":"583:16:3","value":{"name":"length","nodeType":"YulIdentifier","src":"593:6:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"583:6:3"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"92:6:3","type":""}],"src":"14:591:3"},{"body":{"nodeType":"YulBlock","src":"689:684:3","statements":[{"nodeType":"YulVariableDeclaration","src":"699:12:3","value":{"kind":"number","nodeType":"YulLiteral","src":"709:2:3","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"703:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"756:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"765:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"768:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"758:6:3"},"nodeType":"YulFunctionCall","src":"758:12:3"},"nodeType":"YulExpressionStatement","src":"758:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"731:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"740:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"727:3:3"},"nodeType":"YulFunctionCall","src":"727:23:3"},{"name":"_1","nodeType":"YulIdentifier","src":"752:2:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"723:3:3"},"nodeType":"YulFunctionCall","src":"723:32:3"},"nodeType":"YulIf","src":"720:52:3"},{"nodeType":"YulVariableDeclaration","src":"781:37:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"808:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"795:12:3"},"nodeType":"YulFunctionCall","src":"795:23:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"785:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"827:28:3","value":{"kind":"number","nodeType":"YulLiteral","src":"837:18:3","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"831:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"882:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"891:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"894:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"884:6:3"},"nodeType":"YulFunctionCall","src":"884:12:3"},"nodeType":"YulExpressionStatement","src":"884:12:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"870:6:3"},{"name":"_2","nodeType":"YulIdentifier","src":"878:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"867:2:3"},"nodeType":"YulFunctionCall","src":"867:14:3"},"nodeType":"YulIf","src":"864:34:3"},{"nodeType":"YulVariableDeclaration","src":"907:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"921:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"932:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"917:3:3"},"nodeType":"YulFunctionCall","src":"917:22:3"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"911:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"987:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"996:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"999:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"989:6:3"},"nodeType":"YulFunctionCall","src":"989:12:3"},"nodeType":"YulExpressionStatement","src":"989:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"966:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"970:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"962:3:3"},"nodeType":"YulFunctionCall","src":"962:13:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"977:7:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"958:3:3"},"nodeType":"YulFunctionCall","src":"958:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"951:6:3"},"nodeType":"YulFunctionCall","src":"951:35:3"},"nodeType":"YulIf","src":"948:55:3"},{"nodeType":"YulVariableDeclaration","src":"1012:26:3","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1035:2:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1022:12:3"},"nodeType":"YulFunctionCall","src":"1022:16:3"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1016:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1061:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1063:16:3"},"nodeType":"YulFunctionCall","src":"1063:18:3"},"nodeType":"YulExpressionStatement","src":"1063:18:3"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1053:2:3"},{"name":"_2","nodeType":"YulIdentifier","src":"1057:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1050:2:3"},"nodeType":"YulFunctionCall","src":"1050:10:3"},"nodeType":"YulIf","src":"1047:36:3"},{"nodeType":"YulVariableDeclaration","src":"1092:66:3","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1133:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"1137:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1129:3:3"},"nodeType":"YulFunctionCall","src":"1129:13:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1148:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1144:3:3"},"nodeType":"YulFunctionCall","src":"1144:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1125:3:3"},"nodeType":"YulFunctionCall","src":"1125:27:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1154:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:3"},"nodeType":"YulFunctionCall","src":"1121:36:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1105:15:3"},"nodeType":"YulFunctionCall","src":"1105:53:3"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"1096:5:3","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1174:5:3"},{"name":"_4","nodeType":"YulIdentifier","src":"1181:2:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1167:6:3"},"nodeType":"YulFunctionCall","src":"1167:17:3"},"nodeType":"YulExpressionStatement","src":"1167:17:3"},{"body":{"nodeType":"YulBlock","src":"1230:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1239:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1242:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1232:6:3"},"nodeType":"YulFunctionCall","src":"1232:12:3"},"nodeType":"YulExpressionStatement","src":"1232:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1207:2:3"},{"name":"_4","nodeType":"YulIdentifier","src":"1211:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1203:3:3"},"nodeType":"YulFunctionCall","src":"1203:11:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1216:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1199:3:3"},"nodeType":"YulFunctionCall","src":"1199:20:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1221:7:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1196:2:3"},"nodeType":"YulFunctionCall","src":"1196:33:3"},"nodeType":"YulIf","src":"1193:53:3"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1272:5:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1279:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1268:3:3"},"nodeType":"YulFunctionCall","src":"1268:14:3"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1288:2:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1292:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1284:3:3"},"nodeType":"YulFunctionCall","src":"1284:11:3"},{"name":"_4","nodeType":"YulIdentifier","src":"1297:2:3"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1255:12:3"},"nodeType":"YulFunctionCall","src":"1255:45:3"},"nodeType":"YulExpressionStatement","src":"1255:45:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1324:5:3"},{"name":"_4","nodeType":"YulIdentifier","src":"1331:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1320:3:3"},"nodeType":"YulFunctionCall","src":"1320:14:3"},{"name":"_1","nodeType":"YulIdentifier","src":"1336:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1316:3:3"},"nodeType":"YulFunctionCall","src":"1316:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1341:1:3","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1309:6:3"},"nodeType":"YulFunctionCall","src":"1309:34:3"},"nodeType":"YulExpressionStatement","src":"1309:34:3"},{"nodeType":"YulAssignment","src":"1352:15:3","value":{"name":"array","nodeType":"YulIdentifier","src":"1362:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:3"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"655:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"666:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"678:6:3","type":""}],"src":"610:763:3"},{"body":{"nodeType":"YulBlock","src":"1448:110:3","statements":[{"body":{"nodeType":"YulBlock","src":"1494:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:3"},"nodeType":"YulFunctionCall","src":"1496:12:3"},"nodeType":"YulExpressionStatement","src":"1496:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1469:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1478:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1465:3:3"},"nodeType":"YulFunctionCall","src":"1465:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1490:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1461:3:3"},"nodeType":"YulFunctionCall","src":"1461:32:3"},"nodeType":"YulIf","src":"1458:52:3"},{"nodeType":"YulAssignment","src":"1519:33:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1529:12:3"},"nodeType":"YulFunctionCall","src":"1529:23:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1519:6:3"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1414:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1425:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1437:6:3","type":""}],"src":"1378:180:3"},{"body":{"nodeType":"YulBlock","src":"1644:103:3","statements":[{"body":{"nodeType":"YulBlock","src":"1690:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1699:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1702:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1692:6:3"},"nodeType":"YulFunctionCall","src":"1692:12:3"},"nodeType":"YulExpressionStatement","src":"1692:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1665:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1674:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1661:3:3"},"nodeType":"YulFunctionCall","src":"1661:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1686:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1657:3:3"},"nodeType":"YulFunctionCall","src":"1657:32:3"},"nodeType":"YulIf","src":"1654:52:3"},{"nodeType":"YulAssignment","src":"1715:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1731:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1725:5:3"},"nodeType":"YulFunctionCall","src":"1725:16:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1715:6:3"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1610:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1621:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1633:6:3","type":""}],"src":"1563:184:3"},{"body":{"nodeType":"YulBlock","src":"1864:913:3","statements":[{"body":{"nodeType":"YulBlock","src":"1910:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1919:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1922:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1912:6:3"},"nodeType":"YulFunctionCall","src":"1912:12:3"},"nodeType":"YulExpressionStatement","src":"1912:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1885:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1894:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1881:3:3"},"nodeType":"YulFunctionCall","src":"1881:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1906:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1877:3:3"},"nodeType":"YulFunctionCall","src":"1877:32:3"},"nodeType":"YulIf","src":"1874:52:3"},{"nodeType":"YulAssignment","src":"1935:33:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1945:12:3"},"nodeType":"YulFunctionCall","src":"1945:23:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1935:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"1977:12:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1987:2:3","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1981:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1998:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2029:9:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2040:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2025:3:3"},"nodeType":"YulFunctionCall","src":"2025:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2012:12:3"},"nodeType":"YulFunctionCall","src":"2012:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2002:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2053:28:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2063:18:3","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2057:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2108:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2117:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2120:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2110:6:3"},"nodeType":"YulFunctionCall","src":"2110:12:3"},"nodeType":"YulExpressionStatement","src":"2110:12:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2096:6:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2104:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2093:2:3"},"nodeType":"YulFunctionCall","src":"2093:14:3"},"nodeType":"YulIf","src":"2090:34:3"},{"nodeType":"YulVariableDeclaration","src":"2133:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:3"},"nodeType":"YulFunctionCall","src":"2143:22:3"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2137:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2213:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2222:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2225:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2215:6:3"},"nodeType":"YulFunctionCall","src":"2215:12:3"},"nodeType":"YulExpressionStatement","src":"2215:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2192:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"2196:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:3"},"nodeType":"YulFunctionCall","src":"2188:13:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2203:7:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2184:3:3"},"nodeType":"YulFunctionCall","src":"2184:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2177:6:3"},"nodeType":"YulFunctionCall","src":"2177:35:3"},"nodeType":"YulIf","src":"2174:55:3"},{"nodeType":"YulVariableDeclaration","src":"2238:26:3","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2261:2:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2248:12:3"},"nodeType":"YulFunctionCall","src":"2248:16:3"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2242:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2287:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2289:16:3"},"nodeType":"YulFunctionCall","src":"2289:18:3"},"nodeType":"YulExpressionStatement","src":"2289:18:3"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"2279:2:3"},{"name":"_2","nodeType":"YulIdentifier","src":"2283:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2276:2:3"},"nodeType":"YulFunctionCall","src":"2276:10:3"},"nodeType":"YulIf","src":"2273:36:3"},{"nodeType":"YulVariableDeclaration","src":"2318:20:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2332:1:3","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"2335:2:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2328:3:3"},"nodeType":"YulFunctionCall","src":"2328:10:3"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"2322:2:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2347:39:3","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"2378:2:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2382:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:3"},"nodeType":"YulFunctionCall","src":"2374:11:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2358:15:3"},"nodeType":"YulFunctionCall","src":"2358:28:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2351:3:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2395:16:3","value":{"name":"dst","nodeType":"YulIdentifier","src":"2408:3:3"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2399:5:3","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2427:3:3"},{"name":"_4","nodeType":"YulIdentifier","src":"2432:2:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2420:6:3"},"nodeType":"YulFunctionCall","src":"2420:15:3"},"nodeType":"YulExpressionStatement","src":"2420:15:3"},{"nodeType":"YulAssignment","src":"2444:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2455:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2460:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2451:3:3"},"nodeType":"YulFunctionCall","src":"2451:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2444:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"2472:22:3","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2487:2:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2491:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:3"},"nodeType":"YulFunctionCall","src":"2483:11:3"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2476:3:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2540:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2549:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2552:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2542:6:3"},"nodeType":"YulFunctionCall","src":"2542:12:3"},"nodeType":"YulExpressionStatement","src":"2542:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2517:2:3"},{"name":"_5","nodeType":"YulIdentifier","src":"2521:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:3"},"nodeType":"YulFunctionCall","src":"2513:11:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2526:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2509:3:3"},"nodeType":"YulFunctionCall","src":"2509:20:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2531:7:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2506:2:3"},"nodeType":"YulFunctionCall","src":"2506:33:3"},"nodeType":"YulIf","src":"2503:53:3"},{"nodeType":"YulVariableDeclaration","src":"2565:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2574:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2569:1:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2629:118:3","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2650:3:3"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2668:3:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2655:12:3"},"nodeType":"YulFunctionCall","src":"2655:17:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2643:6:3"},"nodeType":"YulFunctionCall","src":"2643:30:3"},"nodeType":"YulExpressionStatement","src":"2643:30:3"},{"nodeType":"YulAssignment","src":"2686:19:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2697:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2702:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2693:3:3"},"nodeType":"YulFunctionCall","src":"2693:12:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2686:3:3"}]},{"nodeType":"YulAssignment","src":"2718:19:3","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2729:3:3"},{"name":"_1","nodeType":"YulIdentifier","src":"2734:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:3"},"nodeType":"YulFunctionCall","src":"2725:12:3"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2718:3:3"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2595:1:3"},{"name":"_4","nodeType":"YulIdentifier","src":"2598:2:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2592:2:3"},"nodeType":"YulFunctionCall","src":"2592:9:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2602:18:3","statements":[{"nodeType":"YulAssignment","src":"2604:14:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2613:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"2616:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2609:3:3"},"nodeType":"YulFunctionCall","src":"2609:9:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2604:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"2588:3:3","statements":[]},"src":"2584:163:3"},{"nodeType":"YulAssignment","src":"2756:15:3","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2766:5:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2756:6:3"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1822:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1833:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1845:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1853:6:3","type":""}],"src":"1752:1025:3"},{"body":{"nodeType":"YulBlock","src":"2973:14:3","statements":[{"nodeType":"YulAssignment","src":"2975:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"2982:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2975:3:3"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2957:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2965:3:3","type":""}],"src":"2782:205:3"},{"body":{"nodeType":"YulBlock","src":"3093:102:3","statements":[{"nodeType":"YulAssignment","src":"3103:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3115:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3126:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3111:3:3"},"nodeType":"YulFunctionCall","src":"3111:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3103:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3145:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3160:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3176:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3181:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3172:3:3"},"nodeType":"YulFunctionCall","src":"3172:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"3185:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3168:3:3"},"nodeType":"YulFunctionCall","src":"3168:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3156:3:3"},"nodeType":"YulFunctionCall","src":"3156:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3138:6:3"},"nodeType":"YulFunctionCall","src":"3138:51:3"},"nodeType":"YulExpressionStatement","src":"3138:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3062:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:3","type":""}],"src":"2992:203:3"},{"body":{"nodeType":"YulBlock","src":"3317:102:3","statements":[{"nodeType":"YulAssignment","src":"3327:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3339:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3350:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3335:3:3"},"nodeType":"YulFunctionCall","src":"3335:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3327:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3369:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3400:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3405:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3396:3:3"},"nodeType":"YulFunctionCall","src":"3396:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"3409:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3392:3:3"},"nodeType":"YulFunctionCall","src":"3392:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3380:3:3"},"nodeType":"YulFunctionCall","src":"3380:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3362:6:3"},"nodeType":"YulFunctionCall","src":"3362:51:3"},"nodeType":"YulExpressionStatement","src":"3362:51:3"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3286:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3297:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3308:4:3","type":""}],"src":"3200:219:3"},{"body":{"nodeType":"YulBlock","src":"3553:175:3","statements":[{"nodeType":"YulAssignment","src":"3563:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3575:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3586:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:3"},"nodeType":"YulFunctionCall","src":"3571:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3563:4:3"}]},{"nodeType":"YulVariableDeclaration","src":"3598:29:3","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3616:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3621:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3612:3:3"},"nodeType":"YulFunctionCall","src":"3612:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"3625:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3608:3:3"},"nodeType":"YulFunctionCall","src":"3608:19:3"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3602:2:3","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3643:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3658:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3666:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3654:3:3"},"nodeType":"YulFunctionCall","src":"3654:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3636:6:3"},"nodeType":"YulFunctionCall","src":"3636:34:3"},"nodeType":"YulExpressionStatement","src":"3636:34:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:3"},"nodeType":"YulFunctionCall","src":"3686:18:3"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3710:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3718:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3706:3:3"},"nodeType":"YulFunctionCall","src":"3706:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:3"},"nodeType":"YulFunctionCall","src":"3679:43:3"},"nodeType":"YulExpressionStatement","src":"3679:43:3"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3514:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3525:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3533:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3544:4:3","type":""}],"src":"3424:304:3"},{"body":{"nodeType":"YulBlock","src":"3874:535:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3891:9:3"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3916:6:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3909:6:3"},"nodeType":"YulFunctionCall","src":"3909:14:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3902:6:3"},"nodeType":"YulFunctionCall","src":"3902:22:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3884:6:3"},"nodeType":"YulFunctionCall","src":"3884:41:3"},"nodeType":"YulExpressionStatement","src":"3884:41:3"},{"nodeType":"YulVariableDeclaration","src":"3934:12:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3944:2:3","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3938:2:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3966:9:3"},{"name":"_1","nodeType":"YulIdentifier","src":"3977:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3962:3:3"},"nodeType":"YulFunctionCall","src":"3962:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:3","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3955:6:3"},"nodeType":"YulFunctionCall","src":"3955:30:3"},"nodeType":"YulExpressionStatement","src":"3955:30:3"},{"nodeType":"YulVariableDeclaration","src":"3994:27:3","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4014:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4008:5:3"},"nodeType":"YulFunctionCall","src":"4008:13:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3998:6:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4041:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4052:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4037:3:3"},"nodeType":"YulFunctionCall","src":"4037:18:3"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4030:6:3"},"nodeType":"YulFunctionCall","src":"4030:34:3"},"nodeType":"YulExpressionStatement","src":"4030:34:3"},{"nodeType":"YulVariableDeclaration","src":"4073:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"4082:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4077:1:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"4142:90:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4171:9:3"},{"name":"i","nodeType":"YulIdentifier","src":"4182:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:3"},"nodeType":"YulFunctionCall","src":"4167:17:3"},{"kind":"number","nodeType":"YulLiteral","src":"4186:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4163:3:3"},"nodeType":"YulFunctionCall","src":"4163:26:3"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4205:6:3"},{"name":"i","nodeType":"YulIdentifier","src":"4213:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:3"},"nodeType":"YulFunctionCall","src":"4201:14:3"},{"name":"_1","nodeType":"YulIdentifier","src":"4217:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4197:3:3"},"nodeType":"YulFunctionCall","src":"4197:23:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4191:5:3"},"nodeType":"YulFunctionCall","src":"4191:30:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4156:6:3"},"nodeType":"YulFunctionCall","src":"4156:66:3"},"nodeType":"YulExpressionStatement","src":"4156:66:3"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4103:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"4106:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4100:2:3"},"nodeType":"YulFunctionCall","src":"4100:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4114:19:3","statements":[{"nodeType":"YulAssignment","src":"4116:15:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4125:1:3"},{"name":"_1","nodeType":"YulIdentifier","src":"4128:2:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4121:3:3"},"nodeType":"YulFunctionCall","src":"4121:10:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4116:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"4096:3:3","statements":[]},"src":"4092:140:3"},{"body":{"nodeType":"YulBlock","src":"4266:66:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4295:9:3"},{"name":"length","nodeType":"YulIdentifier","src":"4306:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4291:3:3"},"nodeType":"YulFunctionCall","src":"4291:22:3"},{"kind":"number","nodeType":"YulLiteral","src":"4315:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4287:3:3"},"nodeType":"YulFunctionCall","src":"4287:31:3"},{"kind":"number","nodeType":"YulLiteral","src":"4320:1:3","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4280:6:3"},"nodeType":"YulFunctionCall","src":"4280:42:3"},"nodeType":"YulExpressionStatement","src":"4280:42:3"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4247:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"4250:6:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4244:2:3"},"nodeType":"YulFunctionCall","src":"4244:13:3"},"nodeType":"YulIf","src":"4241:91:3"},{"nodeType":"YulAssignment","src":"4341:62:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4357:9:3"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4376:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:3","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:3"},"nodeType":"YulFunctionCall","src":"4372:15:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4393:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4389:3:3"},"nodeType":"YulFunctionCall","src":"4389:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4368:3:3"},"nodeType":"YulFunctionCall","src":"4368:29:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:3"},"nodeType":"YulFunctionCall","src":"4353:45:3"},{"kind":"number","nodeType":"YulLiteral","src":"4400:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4349:3:3"},"nodeType":"YulFunctionCall","src":"4349:54:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4341:4:3"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3835:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3846:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3854:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3865:4:3","type":""}],"src":"3733:676:3"},{"body":{"nodeType":"YulBlock","src":"4515:76:3","statements":[{"nodeType":"YulAssignment","src":"4525:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4537:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4548:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4533:3:3"},"nodeType":"YulFunctionCall","src":"4533:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4525:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4567:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"4578:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4560:6:3"},"nodeType":"YulFunctionCall","src":"4560:25:3"},"nodeType":"YulExpressionStatement","src":"4560:25:3"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4484:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4495:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4506:4:3","type":""}],"src":"4414:177:3"},{"body":{"nodeType":"YulBlock","src":"4801:335:3","statements":[{"nodeType":"YulAssignment","src":"4811:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4823:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4834:3:3","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:3"},"nodeType":"YulFunctionCall","src":"4819:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4811:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4854:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"4865:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4847:6:3"},"nodeType":"YulFunctionCall","src":"4847:25:3"},"nodeType":"YulExpressionStatement","src":"4847:25:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4892:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4903:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:3"},"nodeType":"YulFunctionCall","src":"4888:18:3"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4912:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4920:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4908:3:3"},"nodeType":"YulFunctionCall","src":"4908:31:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4881:6:3"},"nodeType":"YulFunctionCall","src":"4881:59:3"},"nodeType":"YulExpressionStatement","src":"4881:59:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4960:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4971:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4956:3:3"},"nodeType":"YulFunctionCall","src":"4956:18:3"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4980:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4988:6:3","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4976:3:3"},"nodeType":"YulFunctionCall","src":"4976:19:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4949:6:3"},"nodeType":"YulFunctionCall","src":"4949:47:3"},"nodeType":"YulExpressionStatement","src":"4949:47:3"},{"nodeType":"YulVariableDeclaration","src":"5005:20:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5015:10:3","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5009:2:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5045:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5056:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5041:3:3"},"nodeType":"YulFunctionCall","src":"5041:18:3"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5065:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"5073:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5061:3:3"},"nodeType":"YulFunctionCall","src":"5061:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5034:6:3"},"nodeType":"YulFunctionCall","src":"5034:43:3"},"nodeType":"YulExpressionStatement","src":"5034:43:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5097:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5108:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:3"},"nodeType":"YulFunctionCall","src":"5093:19:3"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5118:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"5126:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5114:3:3"},"nodeType":"YulFunctionCall","src":"5114:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5086:6:3"},"nodeType":"YulFunctionCall","src":"5086:44:3"},"nodeType":"YulExpressionStatement","src":"5086:44:3"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4738:9:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4749:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4757:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4765:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4773:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4781:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4792:4:3","type":""}],"src":"4596:540:3"},{"body":{"nodeType":"YulBlock","src":"5274:102:3","statements":[{"nodeType":"YulAssignment","src":"5284:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5296:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5307:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:3"},"nodeType":"YulFunctionCall","src":"5292:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5284:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5326:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5341:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5357:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5362:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5353:3:3"},"nodeType":"YulFunctionCall","src":"5353:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"5366:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5349:3:3"},"nodeType":"YulFunctionCall","src":"5349:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5337:3:3"},"nodeType":"YulFunctionCall","src":"5337:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5319:6:3"},"nodeType":"YulFunctionCall","src":"5319:51:3"},"nodeType":"YulExpressionStatement","src":"5319:51:3"}]},"name":"abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$95__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5243:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5254:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5265:4:3","type":""}],"src":"5141:235:3"},{"body":{"nodeType":"YulBlock","src":"5495:229:3","statements":[{"nodeType":"YulAssignment","src":"5505:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5517:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5528:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:3"},"nodeType":"YulFunctionCall","src":"5513:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5505:4:3"}]},{"body":{"nodeType":"YulBlock","src":"5573:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5594:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5601:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5606:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5597:3:3"},"nodeType":"YulFunctionCall","src":"5597:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5587:6:3"},"nodeType":"YulFunctionCall","src":"5587:31:3"},"nodeType":"YulExpressionStatement","src":"5587:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5641:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5631:6:3"},"nodeType":"YulFunctionCall","src":"5631:15:3"},"nodeType":"YulExpressionStatement","src":"5631:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5666:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5669:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5659:6:3"},"nodeType":"YulFunctionCall","src":"5659:15:3"},"nodeType":"YulExpressionStatement","src":"5659:15:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5553:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"5561:1:3","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5550:2:3"},"nodeType":"YulFunctionCall","src":"5550:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5543:6:3"},"nodeType":"YulFunctionCall","src":"5543:21:3"},"nodeType":"YulIf","src":"5540:144:3"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5700:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"5711:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5693:6:3"},"nodeType":"YulFunctionCall","src":"5693:25:3"},"nodeType":"YulExpressionStatement","src":"5693:25:3"}]},"name":"abi_encode_tuple_t_enum$_RaffleState_$170__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5464:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5475:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5486:4:3","type":""}],"src":"5381:343:3"},{"body":{"nodeType":"YulBlock","src":"5828:89:3","statements":[{"nodeType":"YulAssignment","src":"5838:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5850:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5861:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5846:3:3"},"nodeType":"YulFunctionCall","src":"5846:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5838:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5880:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5895:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"5903:6:3","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5891:3:3"},"nodeType":"YulFunctionCall","src":"5891:19:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5873:6:3"},"nodeType":"YulFunctionCall","src":"5873:38:3"},"nodeType":"YulExpressionStatement","src":"5873:38:3"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5797:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5808:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5819:4:3","type":""}],"src":"5729:188:3"},{"body":{"nodeType":"YulBlock","src":"6023:76:3","statements":[{"nodeType":"YulAssignment","src":"6033:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6045:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6056:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6041:3:3"},"nodeType":"YulFunctionCall","src":"6041:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6033:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6075:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"6086:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6068:6:3"},"nodeType":"YulFunctionCall","src":"6068:25:3"},"nodeType":"YulExpressionStatement","src":"6068:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5992:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6003:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6014:4:3","type":""}],"src":"5922:177:3"},{"body":{"nodeType":"YulBlock","src":"6203:93:3","statements":[{"nodeType":"YulAssignment","src":"6213:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6225:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6236:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6221:3:3"},"nodeType":"YulFunctionCall","src":"6221:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6213:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6255:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6270:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6278:10:3","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6266:3:3"},"nodeType":"YulFunctionCall","src":"6266:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6248:6:3"},"nodeType":"YulFunctionCall","src":"6248:42:3"},"nodeType":"YulExpressionStatement","src":"6248:42:3"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6172:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6183:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6194:4:3","type":""}],"src":"6104:192:3"},{"body":{"nodeType":"YulBlock","src":"6400:101:3","statements":[{"nodeType":"YulAssignment","src":"6410:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6422:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6433:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6418:3:3"},"nodeType":"YulFunctionCall","src":"6418:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6410:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6452:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6467:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6475:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6463:3:3"},"nodeType":"YulFunctionCall","src":"6463:31:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6445:6:3"},"nodeType":"YulFunctionCall","src":"6445:50:3"},"nodeType":"YulExpressionStatement","src":"6445:50:3"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6369:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6380:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6391:4:3","type":""}],"src":"6301:200:3"},{"body":{"nodeType":"YulBlock","src":"6551:230:3","statements":[{"nodeType":"YulAssignment","src":"6561:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6577:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6571:5:3"},"nodeType":"YulFunctionCall","src":"6571:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6561:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"6589:58:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6611:6:3"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6627:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:3","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6623:3:3"},"nodeType":"YulFunctionCall","src":"6623:13:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6642:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6638:3:3"},"nodeType":"YulFunctionCall","src":"6638:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6619:3:3"},"nodeType":"YulFunctionCall","src":"6619:27:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6607:3:3"},"nodeType":"YulFunctionCall","src":"6607:40:3"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6593:10:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"6722:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6724:16:3"},"nodeType":"YulFunctionCall","src":"6724:18:3"},"nodeType":"YulExpressionStatement","src":"6724:18:3"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6665:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"6677:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6662:2:3"},"nodeType":"YulFunctionCall","src":"6662:34:3"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6701:10:3"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6713:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6698:2:3"},"nodeType":"YulFunctionCall","src":"6698:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6659:2:3"},"nodeType":"YulFunctionCall","src":"6659:62:3"},"nodeType":"YulIf","src":"6656:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6760:2:3","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6764:10:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6753:6:3"},"nodeType":"YulFunctionCall","src":"6753:22:3"},"nodeType":"YulExpressionStatement","src":"6753:22:3"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6531:4:3","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6540:6:3","type":""}],"src":"6506:275:3"},{"body":{"nodeType":"YulBlock","src":"6835:173:3","statements":[{"body":{"nodeType":"YulBlock","src":"6865:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6886:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6893:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6898:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6889:3:3"},"nodeType":"YulFunctionCall","src":"6889:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6879:6:3"},"nodeType":"YulFunctionCall","src":"6879:31:3"},"nodeType":"YulExpressionStatement","src":"6879:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6930:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6933:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:3"},"nodeType":"YulFunctionCall","src":"6923:15:3"},"nodeType":"YulExpressionStatement","src":"6923:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6958:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6961:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6951:6:3"},"nodeType":"YulFunctionCall","src":"6951:15:3"},"nodeType":"YulExpressionStatement","src":"6951:15:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6851:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"6854:1:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6848:2:3"},"nodeType":"YulFunctionCall","src":"6848:8:3"},"nodeType":"YulIf","src":"6845:131:3"},{"nodeType":"YulAssignment","src":"6985:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6997:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"7000:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6993:3:3"},"nodeType":"YulFunctionCall","src":"6993:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6985:4:3"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6817:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"6820:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6826:4:3","type":""}],"src":"6786:222:3"},{"body":{"nodeType":"YulBlock","src":"7051:171:3","statements":[{"body":{"nodeType":"YulBlock","src":"7082:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7103:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7110:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7115:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7106:3:3"},"nodeType":"YulFunctionCall","src":"7106:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7096:6:3"},"nodeType":"YulFunctionCall","src":"7096:31:3"},"nodeType":"YulExpressionStatement","src":"7096:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7147:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7150:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7140:6:3"},"nodeType":"YulFunctionCall","src":"7140:15:3"},"nodeType":"YulExpressionStatement","src":"7140:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7175:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7178:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7168:6:3"},"nodeType":"YulFunctionCall","src":"7168:15:3"},"nodeType":"YulExpressionStatement","src":"7168:15:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7071:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7064:6:3"},"nodeType":"YulFunctionCall","src":"7064:9:3"},"nodeType":"YulIf","src":"7061:132:3"},{"nodeType":"YulAssignment","src":"7202:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7211:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"7214:1:3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7207:3:3"},"nodeType":"YulFunctionCall","src":"7207:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7202:1:3"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7036:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"7039:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7045:1:3","type":""}],"src":"7013:209:3"},{"body":{"nodeType":"YulBlock","src":"7259:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7283:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7288:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7279:3:3"},"nodeType":"YulFunctionCall","src":"7279:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:3"},"nodeType":"YulFunctionCall","src":"7269:31:3"},"nodeType":"YulExpressionStatement","src":"7269:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7316:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7319:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7309:6:3"},"nodeType":"YulFunctionCall","src":"7309:15:3"},"nodeType":"YulExpressionStatement","src":"7309:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7340:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7343:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7333:6:3"},"nodeType":"YulFunctionCall","src":"7333:15:3"},"nodeType":"YulExpressionStatement","src":"7333:15:3"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"7227:127:3"},{"body":{"nodeType":"YulBlock","src":"7391:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7408:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7415:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7420:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7411:3:3"},"nodeType":"YulFunctionCall","src":"7411:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7401:6:3"},"nodeType":"YulFunctionCall","src":"7401:31:3"},"nodeType":"YulExpressionStatement","src":"7401:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7448:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7451:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7441:6:3"},"nodeType":"YulFunctionCall","src":"7441:15:3"},"nodeType":"YulExpressionStatement","src":"7441:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7472:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7475:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7465:6:3"},"nodeType":"YulFunctionCall","src":"7465:15:3"},"nodeType":"YulExpressionStatement","src":"7465:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7359:127:3"},{"body":{"nodeType":"YulBlock","src":"7523:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7540:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7547:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7552:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7543:3:3"},"nodeType":"YulFunctionCall","src":"7543:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7533:6:3"},"nodeType":"YulFunctionCall","src":"7533:31:3"},"nodeType":"YulExpressionStatement","src":"7533:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7580:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7583:4:3","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7573:6:3"},"nodeType":"YulFunctionCall","src":"7573:15:3"},"nodeType":"YulExpressionStatement","src":"7573:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7604:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7607:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7597:6:3"},"nodeType":"YulFunctionCall","src":"7597:15:3"},"nodeType":"YulExpressionStatement","src":"7597:15:3"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7491:127:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value0 := array\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 96), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$95__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_RaffleState_$170__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"106":[{"length":32,"start":1194},{"length":32,"start":1260}],"175":[{"length":32,"start":638},{"length":32,"start":957}],"177":[{"length":32,"start":498},{"length":32,"start":1793}],"185":[{"length":32,"start":830},{"length":32,"start":1565}],"187":[{"length":32,"start":746},{"length":32,"start":1412}],"189":[{"length":32,"start":381},{"length":32,"start":1450}],"191":[{"length":32,"start":921},{"length":32,"start":1505}]},"linkReferences":{},"object":"6080604052600436106100f35760003560e01c806372cf6e341161008a578063ae771f6b11610059578063ae771f6b1461030c578063aebc45501461032c578063cc45483f14610360578063d757d0271461038757600080fd5b806372cf6e34146102425780637ea3e6c11461026c5780638638b0c6146102a05780638e879c8a146102d857600080fd5b8063470cdf97116100c6578063470cdf971461016b57806367f082b0146101b85780636919207d146101e05780636e04ff0d1461021457600080fd5b80630ff19fd7146100f85780631fe543e31461010257806334854043146101225780634585e33b1461014b575b600080fd5b6101006103bb565b005b34801561010e57600080fd5b5061010061011d366004610ab5565b61049f565b34801561012e57600080fd5b5061013860025481565b6040519081526020015b60405180910390f35b34801561015757600080fd5b5061010061016636600461097c565b61052b565b34801561017757600080fd5b5061019f7f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff9091168152602001610142565b3480156101c457600080fd5b506101cd600381565b60405161ffff9091168152602001610142565b3480156101ec57600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b34801561022057600080fd5b5061023461022f3660046109ee565b6106cd565b604051610142929190610b6e565b34801561024e57600080fd5b50610257600181565b60405163ffffffff9091168152602001610142565b34801561027857600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ac57600080fd5b506003546102c0906001600160a01b031681565b6040516001600160a01b039091168152602001610142565b3480156102e457600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b34801561031857600080fd5b506102c0610327366004610a83565b610772565b34801561033857600080fd5b506102c07f000000000000000000000000000000000000000000000000000000000000000081565b34801561036c57600080fd5b5060005461037a9060ff1681565b6040516101429190610bcd565b34801561039357600080fd5b506102577f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000003410156103fc5760405163181c600560e11b815260040160405180910390fd5b6000805460ff16600181111561041457610414610c6d565b146104325760405163349289c560e21b815260040160405180910390fd5b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319163390811790915560405190917f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d491a2565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051d5760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440160405180910390fd5b610527828261079c565b5050565b6000610545604051806020016040528060008152506106cd565b5090508061056657604051638e4bc81760e01b815260040160405180910390fd5b6000805460ff1916600190811782556040516305d3b1d360e41b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166024820152600360448201527f000000000000000000000000000000000000000000000000000000000000000063ffffffff16606482015260848101919091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635d3b1d309060a401602060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190610a9c565b60405190915081907fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b90600090a250505050565b60008054606090829060ff1660018111156106ea576106ea610c6d565b6001546002549115925047151591901515906000907f00000000000000000000000000000000000000000000000000000000000000009061072b9042610c26565b1190508080156107385750835b80156107415750825b801561074a5750815b60408051808201909152600381526203078360ec1b6020820152909890975095505050505050565b6001818154811061078257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600180549050826000815181106107b7576107b7610c83565b60200260200101516107c99190610c4b565b90506000600182815481106107e0576107e0610c83565b6000918252602082200154600380546001600160a01b0319166001600160a01b0390921691821790559150604051908082528060200260200182016040528015610834578160200160208202803683370190505b50805161084991600191602090910190610902565b50426002556000805460ff191681556040516001600160a01b0383169047908381818185875af1925050503d80600081146108a0576040519150601f19603f3d011682016040523d82523d6000602084013e6108a5565b606091505b50509050806108c75760405163a1d04b3960e01b815260040160405180910390fd5b6040516001600160a01b038316907f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df90600090a25050505050565b828054828255906000526020600020908101928215610957579160200282015b8281111561095757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610922565b50610963929150610967565b5090565b5b808211156109635760008155600101610968565b6000806020838503121561098f57600080fd5b823567ffffffffffffffff808211156109a757600080fd5b818501915085601f8301126109bb57600080fd5b8135818111156109ca57600080fd5b8660208285010111156109dc57600080fd5b60209290920196919550909350505050565b60006020808385031215610a0157600080fd5b823567ffffffffffffffff80821115610a1957600080fd5b818501915085601f830112610a2d57600080fd5b813581811115610a3f57610a3f610c99565b610a51601f8201601f19168501610bf5565b91508082528684828501011115610a6757600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215610a9557600080fd5b5035919050565b600060208284031215610aae57600080fd5b5051919050565b60008060408385031215610ac857600080fd5b8235915060208084013567ffffffffffffffff80821115610ae857600080fd5b818601915086601f830112610afc57600080fd5b813581811115610b0e57610b0e610c99565b8060051b9150610b1f848301610bf5565b8181528481019084860184860187018b1015610b3a57600080fd5b600095505b83861015610b5d578035835260019590950194918601918601610b3f565b508096505050505050509250929050565b821515815260006020604081840152835180604085015260005b81811015610ba457858101830151858201606001528201610b88565b81811115610bb6576000606083870101525b50601f01601f191692909201606001949350505050565b6020810160028310610bef57634e487b7160e01b600052602160045260246000fd5b91905290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1e57610c1e610c99565b604052919050565b600082821015610c4657634e487b7160e01b600052601160045260246000fd5b500390565b600082610c6857634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fe5bdb9921811b380d08fb04df1a5e601c21eb2f63c6d961d5104099548dfe3864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72CF6E34 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAE771F6B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAE771F6B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xAEBC4550 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xCC45483F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD757D027 EQ PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72CF6E34 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x7EA3E6C1 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x8638B0C6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x8E879C8A EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x470CDF97 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x470CDF97 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x67F082B0 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x6919207D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFF19FD7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x34854043 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH2 0x3BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP3 SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2C0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x37A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x181C6005 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x414 JUMPI PUSH2 0x414 PUSH2 0xC6D JUMP JUMPDEST EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH4 0x349289C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 SWAP2 LOG2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x527 DUP3 DUP3 PUSH2 0x79C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6CD JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8E4BC817 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6EA PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP2 ISZERO SWAP3 POP SELFBALANCE ISZERO ISZERO SWAP2 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x72B SWAP1 TIMESTAMP PUSH2 0xC26 JUMP JUMPDEST GT SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x738 JUMPI POP DUP4 JUMPDEST DUP1 ISZERO PUSH2 0x741 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x74A JUMPI POP DUP2 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x30783 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7B7 JUMPI PUSH2 0x7B7 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7E0 JUMPI PUSH2 0x7E0 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x834 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x849 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA1D04B39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x957 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x957 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x922 JUMP JUMPDEST POP PUSH2 0x963 SWAP3 SWAP2 POP PUSH2 0x967 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x968 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA3F JUMPI PUSH2 0xA3F PUSH2 0xC99 JUMP JUMPDEST PUSH2 0xA51 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xBF5 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0xC99 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xB1F DUP5 DUP4 ADD PUSH2 0xBF5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP5 DUP7 ADD DUP8 ADD DUP12 LT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xB5D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0xB88 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0xBEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1E PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC68 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID JUMPDEST 0xDB SWAP10 0x21 DUP2 SHL CODESIZE 0xD ADDMOD 0xFB DIV 0xDF BYTE 0x5E PUSH1 0x1C 0x21 0xEB 0x2F PUSH4 0xC6D961D5 LT BLOCKHASH SWAP10 SLOAD DUP14 INVALID CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"391:3949:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:496;;;:::i;:::-;;6618:256:1;;;;;;;;;;-1:-1:-1;6618:256:1;;;;;:::i;:::-;;:::i;671:30:2:-;;;;;;;;;;;;;;;;;;;4560:25:3;;;4548:2;4533:18;671:30:2;;;;;;;;3033:607;;;;;;;;;;-1:-1:-1;3033:607:2;;;;;:::i;:::-;;:::i;825:40::-;;;;;;;;;;;;;;;;;;6475:18:3;6463:31;;;6445:50;;6433:2;6418:18;825:40:2;6301:200:3;959:48:2;;;;;;;;;;;;1006:1;959:48;;;;;5903:6:3;5891:19;;;5873:38;;5861:2;5846:18;959:48:2;5729:188:3;588:35:2;;;;;;;;;;;;;;;2527:498;;;;;;;;;;-1:-1:-1;2527:498:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1014:36::-;;;;;;;;;;;;1049:1;1014:36;;;;;6278:10:3;6266:23;;;6248:42;;6236:2;6221:18;1014:36:2;6104:192:3;543:38:2;;;;;;;;;;;;;;;921:29;;;;;;;;;;-1:-1:-1;921:29:2;;;;-1:-1:-1;;;;;921:29:2;;;;;;-1:-1:-1;;;;;3156:32:3;;;3138:51;;3126:2;3111:18;921:29:2;2992:203:3;774:34:2;;;;;;;;;;;;;;;630;;;;;;;;;;-1:-1:-1;630:34:2;;;;;:::i;:::-;;:::i;708:59::-;;;;;;;;;;;;;;;504:32;;;;;;;;;;-1:-1:-1;504:32:2;;;;;;;;;;;;;;;:::i;872:42::-;;;;;;;;;;;;;;;1811:496;1954:13;1942:9;:25;1938:100;;;1995:31;;-1:-1:-1;;;1995:31:2;;;;;;;;;;;1938:100;2106:16;2089:13;;;;;:33;;;;;;;:::i;:::-;;2086:95;;2146:23;;-1:-1:-1;;;2146:23:2;;;;;;;;;;;2086:95;2225:9;:35;;;;;;;-1:-1:-1;2225:35:2;;;;;;;-1:-1:-1;;;;;;2225:35:2;2248:10;2225:35;;;;;;2276:23;;2248:10;;2276:23;;;1811:496::o;6618:256:1:-;6717:10;-1:-1:-1;;;;;6731:14:1;6717:28;;6713:109;;6762:53;;-1:-1:-1;;;6762:53:1;;6788:10;6762:53;;;3636:34:3;-1:-1:-1;;;;;6800:14:1;3706:15:3;3686:18;;;3679:43;3571:18;;6762:53:1;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;3033:607:2:-;3129:17;3152:15;;;;;;;;;;;;;:11;:15::i;:::-;3128:39;;;3183:12;3178:78;;3219:25;;-1:-1:-1;;;3219:25:2;;;;;;;;;;;3178:78;3310:13;:39;;-1:-1:-1;;3310:39:2;3326:23;3310:39;;;;;3380:204;;-1:-1:-1;;;3380:204:2;;3430:9;3380:204;;;4847:25:3;3464:16:2;4920:18:3;4908:31;4888:18;;;4881:59;1006:1:2;4956:18:3;;;4949:47;3531:18:2;5015:10:3;5061:15;5041:18;;;5034:43;5093:19;;;5086:44;;;;-1:-1:-1;;;;;3380:16:2;:35;;;;4819:19:3;;3380:204:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3600:32;;3360:224;;-1:-1:-1;3360:224:2;;3600:32;;;;;3117:523;;3033:607;;:::o;2527:498::-;2613:17;2707:13;;2632:12;;2613:17;;2707:13;;;2687:33;;;;;;;:::i;:::-;2803:9;:16;2872:15;;2687:33;;;-1:-1:-1;2749:21:2;:25;;;2803:20;;;;2687:16;;2891:10;;2854:33;;:15;:33;:::i;:::-;2853:48;2834:68;;2929:10;:20;;;;;2943:6;2929:20;:34;;;;;2953:10;2929:34;:48;;;;;2967:10;2929:48;2989:28;;;;;;;;;;;;-1:-1:-1;;;2989:28:2;;;;2913:65;;2989:28;;-1:-1:-1;2527:498:2;-1:-1:-1;;;;;;2527:498:2:o;630:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;630:34:2;;-1:-1:-1;630:34:2;:::o;3648:689::-;3827:21;3868:9;:16;;;;3851:11;3863:1;3851:14;;;;;;;;:::i;:::-;;;;;;;:33;;;;:::i;:::-;3827:57;;3895:28;3926:9;3936:13;3926:24;;;;;;;;:::i;:::-;;;;;;;;;;3961:14;:29;;-1:-1:-1;;;;;;3961:29:2;-1:-1:-1;;;;;3926:24:2;;;3961:29;;;;;3926:24;-1:-1:-1;4013:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4013:24:2;-1:-1:-1;4001:36:2;;;;:9;;:36;;;;;;:::i;:::-;-1:-1:-1;4066:15:2;4048;:33;4108:16;4092:32;;-1:-1:-1;;4092:32:2;;;4154:51;;-1:-1:-1;;;;;4154:17:2;;;4179:21;;4108:16;4154:51;4108:16;4154:51;4179:21;4154:17;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4135:70;;;4221:7;4216:72;;4252:24;;-1:-1:-1;;;4252:24:2;;;;;;;;;;;4216:72;4303:26;;-1:-1:-1;;;;;4303:26:2;;;;;;;;3772:565;;;3648:689;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:591:3;84:6;92;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;201:9;188:23;230:18;271:2;263:6;260:14;257:34;;;287:1;284;277:12;257:34;325:6;314:9;310:22;300:32;;370:7;363:4;359:2;355:13;351:27;341:55;;392:1;389;382:12;341:55;432:2;419:16;458:2;450:6;447:14;444:34;;;474:1;471;464:12;444:34;519:7;514:2;505:6;501:2;497:15;493:24;490:37;487:57;;;540:1;537;530:12;487:57;571:2;563:11;;;;;593:6;;-1:-1:-1;14:591:3;;-1:-1:-1;;;;14:591:3:o;610:763::-;678:6;709:2;752;740:9;731:7;727:23;723:32;720:52;;;768:1;765;758:12;720:52;808:9;795:23;837:18;878:2;870:6;867:14;864:34;;;894:1;891;884:12;864:34;932:6;921:9;917:22;907:32;;977:7;970:4;966:2;962:13;958:27;948:55;;999:1;996;989:12;948:55;1035:2;1022:16;1057:2;1053;1050:10;1047:36;;;1063:18;;:::i;:::-;1105:53;1148:2;1129:13;;-1:-1:-1;;1125:27:3;1121:36;;1105:53;:::i;:::-;1092:66;;1181:2;1174:5;1167:17;1221:7;1216:2;1211;1207;1203:11;1199:20;1196:33;1193:53;;;1242:1;1239;1232:12;1193:53;1297:2;1292;1288;1284:11;1279:2;1272:5;1268:14;1255:45;1341:1;1320:14;;;1316:23;;;1309:34;;;;-1:-1:-1;1324:5:3;610:763;-1:-1:-1;;;610:763:3:o;1378:180::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;-1:-1:-1;1529:23:3;;1378:180;-1:-1:-1;1378:180:3:o;1563:184::-;1633:6;1686:2;1674:9;1665:7;1661:23;1657:32;1654:52;;;1702:1;1699;1692:12;1654:52;-1:-1:-1;1725:16:3;;1563:184;-1:-1:-1;1563:184:3:o;1752:1025::-;1845:6;1853;1906:2;1894:9;1885:7;1881:23;1877:32;1874:52;;;1922:1;1919;1912:12;1874:52;1958:9;1945:23;1935:33;;1987:2;2040;2029:9;2025:18;2012:32;2063:18;2104:2;2096:6;2093:14;2090:34;;;2120:1;2117;2110:12;2090:34;2158:6;2147:9;2143:22;2133:32;;2203:7;2196:4;2192:2;2188:13;2184:27;2174:55;;2225:1;2222;2215:12;2174:55;2261:2;2248:16;2283:2;2279;2276:10;2273:36;;;2289:18;;:::i;:::-;2335:2;2332:1;2328:10;2318:20;;2358:28;2382:2;2378;2374:11;2358:28;:::i;:::-;2420:15;;;2451:12;;;;2483:11;;;2513;;;2509:20;;2506:33;-1:-1:-1;2503:53:3;;;2552:1;2549;2542:12;2503:53;2574:1;2565:10;;2584:163;2598:2;2595:1;2592:9;2584:163;;;2655:17;;2643:30;;2616:1;2609:9;;;;;2693:12;;;;2725;;2584:163;;;2588:3;2766:5;2756:15;;;;;;;;1752:1025;;;;;:::o;3733:676::-;3916:6;3909:14;3902:22;3891:9;3884:41;3865:4;3944:2;3982;3977;3966:9;3962:18;3955:30;4014:6;4008:13;4057:6;4052:2;4041:9;4037:18;4030:34;4082:1;4092:140;4106:6;4103:1;4100:13;4092:140;;;4201:14;;;4197:23;;4191:30;4167:17;;;4186:2;4163:26;4156:66;4121:10;;4092:140;;;4250:6;4247:1;4244:13;4241:91;;;4320:1;4315:2;4306:6;4295:9;4291:22;4287:31;4280:42;4241:91;-1:-1:-1;4393:2:3;4372:15;-1:-1:-1;;4368:29:3;4353:45;;;;4400:2;4349:54;;3733:676;-1:-1:-1;;;;3733:676:3:o;5381:343::-;5528:2;5513:18;;5561:1;5550:13;;5540:144;;5606:10;5601:3;5597:20;5594:1;5587:31;5641:4;5638:1;5631:15;5669:4;5666:1;5659:15;5540:144;5693:25;;;5381:343;:::o;6506:275::-;6577:2;6571:9;6642:2;6623:13;;-1:-1:-1;;6619:27:3;6607:40;;6677:18;6662:34;;6698:22;;;6659:62;6656:88;;;6724:18;;:::i;:::-;6760:2;6753:22;6506:275;;-1:-1:-1;6506:275:3:o;6786:222::-;6826:4;6854:1;6851;6848:8;6845:131;;;6898:10;6893:3;6889:20;6886:1;6879:31;6933:4;6930:1;6923:15;6961:4;6958:1;6951:15;6845:131;-1:-1:-1;6993:9:3;;6786:222::o;7013:209::-;7045:1;7071;7061:132;;7115:10;7110:3;7106:20;7103:1;7096:31;7150:4;7147:1;7140:15;7178:4;7175:1;7168:15;7061:132;-1:-1:-1;7207:9:3;;7013:209::o;7227:127::-;7288:10;7283:3;7279:20;7276:1;7269:31;7319:4;7316:1;7309:15;7343:4;7340:1;7333:15;7359:127;7420:10;7415:3;7411:20;7408:1;7401:31;7451:4;7448:1;7441:15;7475:4;7472:1;7465:15;7491:127;7552:10;7547:3;7543:20;7540:1;7533:31;7583:4;7580:1;7573:15;7607:4;7604:1;7597:15"},"gasEstimates":{"creation":{"codeDepositCost":"660200","executionCost":"infinite","totalCost":"infinite"},"external":{"NUM_WORDS()":"227","REQUEST_CONFIRMATIONS()":"249","checkUpkeep(bytes)":"infinite","enterRaffel()":"infinite","i_callbackGasLimit()":"infinite","i_entranceFee()":"infinite","i_gasLane()":"infinite","i_interval()":"infinite","i_subscriptionId()":"infinite","i_vrfCoordinator()":"infinite","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","s_lastTimeStamp()":"2352","s_players(uint256)":"4636","s_raffleState()":"2417","s_recentWinner()":"2404"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"NUM_WORDS()":"72cf6e34","REQUEST_CONFIRMATIONS()":"67f082b0","checkUpkeep(bytes)":"6e04ff0d","enterRaffel()":"0ff19fd7","i_callbackGasLimit()":"d757d027","i_entranceFee()":"7ea3e6c1","i_gasLane()":"8e879c8a","i_interval()":"6919207d","i_subscriptionId()":"470cdf97","i_vrfCoordinator()":"aebc4550","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_lastTimeStamp()":"34854043","s_players(uint256)":"ae771f6b","s_raffleState()":"cc45483f","s_recentWinner()":"8638b0c6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__RaffleNotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__SendMoreToEnterRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NUM_WORDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REQUEST_CONFIRMATIONS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_entranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_gasLane\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_subscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract VRFCoordinatorV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_raffleState\",\"outputs\":[{\"internalType\":\"enum Raffle.RaffleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_recentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"//gi\\u1ea5y ph\\u00e9p\\r\\n\\r\\n// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\r\\n\\r\\nerror Raffle__SendMoreToEnterRaffle();\\r\\nerror Raffle__RaffleNotOpen();\\r\\nerror Raffle__UpkeepNotNeeded();\\r\\nerror Raffle__TransferFailed();\\r\\n\\r\\n\\r\\ncontract Raffle is VRFConsumerBaseV2 {\\r\\n    enum RaffleState {\\r\\n        Open,\\r\\n        Calculating\\r\\n    }\\r\\n\\r\\n    RaffleState public s_raffleState;\\r\\n    uint256 public immutable i_entranceFee;\\r\\n    uint256 public immutable i_interval;\\r\\n    address payable[] public s_players;\\r\\n    uint256 public s_lastTimeStamp;\\r\\n    VRFCoordinatorV2Interface public immutable i_vrfCoordinator;\\r\\n    bytes32 public immutable i_gasLane; //keyhash\\r\\n    uint64 public immutable i_subscriptionId;\\r\\n    uint32 public immutable i_callbackGasLimit;\\r\\n    address public s_recentWinner;\\r\\n\\r\\n    uint16 public constant REQUEST_CONFIRMATIONS = 3;\\r\\n    uint32 public constant NUM_WORDS = 1;\\r\\n\\r\\n    event RaffleEnter (address indexed player);\\r\\n    event RequestedRaffleWinner (uint256 indexed requestId);\\r\\n    event WinnerPicked (address indexed winner);\\r\\n\\r\\n    constructor(\\r\\n        uint256 entranceFee,\\r\\n        uint256 interval,\\r\\n        address vrfCoordinatorV2,\\r\\n        bytes32 gasLane, //keyhash\\r\\n        uint64 subscriptionId,\\r\\n        uint32 callbackGasLimit\\r\\n\\r\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2){\\r\\n        i_entranceFee = entranceFee;\\r\\n        i_interval = interval;\\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\r\\n        i_gasLane = gasLane; //keyhash\\r\\n        i_subscriptionId = subscriptionId;\\r\\n        i_callbackGasLimit = callbackGasLimit;\\r\\n        }\\r\\n\\r\\n    function enterRaffel()  external payable {\\r\\n        // require(msg.value >= i_entranceFee, \\\"Not enough money sent!\\\");\\r\\n        if (msg.value < i_entranceFee) {\\r\\n                revert Raffle__SendMoreToEnterRaffle();\\r\\n        }\\r\\n        // Open, caculating a winner\\r\\n        if(s_raffleState != RaffleState.Open) {\\r\\n            revert Raffle__RaffleNotOpen();\\r\\n        }\\r\\n        // b\\u1ea1n c\\u00f3 th\\u1ec3 v\\u00e0o!\\r\\n        s_players.push(payable(msg.sender));\\r\\n        emit RaffleEnter(msg.sender);\\r\\n    }\\r\\n\\r\\n\\r\\n    //1.we want this done automatically\\r\\n    //2. we want a read random winner\\r\\n\\r\\n    //1. Be true after soem time interval\\r\\n    //2. The lottery to be open\\r\\n    //3. The contract has ETH\\r\\n    // Keeper has L\\r\\n    function checkUpkeep(\\r\\n        bytes memory /*checkData*/\\r\\n    ) public view returns (bool upkeepNeeded, bytes memory /*performData*/) {\\r\\n        bool isOpen = RaffleState.Open == s_raffleState;\\r\\n        bool hasBalance = address(this).balance > 0;\\r\\n        bool hasPlayers = s_players.length > 0;\\r\\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\\r\\n        upkeepNeeded = (timePassed && isOpen && hasBalance && hasPlayers);\\r\\n        return (upkeepNeeded, \\\"0x0\\\");\\r\\n    }\\r\\n\\r\\n    function performUpkeep(\\r\\n        bytes calldata /*performData*/) \\r\\n        external {\\r\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n        if (!upkeepNeeded) {\\r\\n            revert Raffle__UpkeepNotNeeded();\\r\\n        }\\r\\n        // th\\u1ef1c hi\\u1ec7n vi\\u1ec7c r\\u00fat th\\u0103m\\r\\n        s_raffleState = RaffleState.Calculating;\\r\\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane, //keyhash\\r\\n            i_subscriptionId,\\r\\n            REQUEST_CONFIRMATIONS,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        emit RequestedRaffleWinner(requestId);\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(\\r\\n        uint256 /*requestId*/,\\r\\n        uint256[] memory randomWords\\r\\n    ) internal override {\\r\\n        // ch\\u1ecdn ng\\u01b0\\u1eddi chi\\u1ebfn th\\u1eafng\\r\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\r\\n        address payable recentWinner = s_players[indexOfWinner];\\r\\n        s_recentWinner = recentWinner;\\r\\n        s_players = new address payable[](0);\\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        s_raffleState = RaffleState.Open;\\r\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\r\\n        if (!success) {\\r\\n            revert Raffle__TransferFailed();\\r\\n        }\\r\\n        emit WinnerPicked(recentWinner);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa75c65172c957d738613f62dcbbb8516d1bfd9557e3e766d3ce5336754cc0b5f\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}","storageLayout":{"storage":[{"astId":173,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":0,"slot":"0","type":"t_enum(RaffleState)170"},{"astId":180,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"1","type":"t_array(t_address_payable)dyn_storage"},{"astId":182,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"2","type":"t_uint256"},{"astId":193,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RaffleState)170":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}